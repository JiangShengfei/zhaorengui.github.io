<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Shadowsocks+SwitchyOmega]]></title>
      <url>/network/2018/08/10/shadowsocks-switchyOmega/</url>
      <content type="text"><![CDATA[This article is for communication only, please do not use for business! The author of this article is not responsible for any consequences. thanks for your attention!本文内容仅作交流学习之用，请勿用于商业！如造成任何后果，本文作者概不负责。谢谢您的关注！If you have questions, please send email to zrg1390556487@gmail.com.ServerTo buy server or to register shadowsocks."搬瓦工"https://shadowsocks.comInstalling and ConfiguringInstalling pip#yum install python-pipor#curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"#python get-pip.py#pip install --upgrade pipInstalling shadowsocks#pip install shadowsocks#vim /etc/shadowsocks.json{  "server": "server_ip",//server ip address  "server_port": 8388,//server port  "local_address":"127.0.0.1",//local address  "local_port":1080,//local port  "password": "password",//password  "method": "aes-256-cfb",//encryption  "timeout":600 //timeout}explanation: server:server ip addressserver_port:server portpassword:use password toolmethod:aes-128-cfb, aes-192-cfb, aes-256-cfb, bf-cfb, cast5-cfb, des-cfb, rc4-md5, chacha20, salsa20, rc4, tableConfiguring auto-start#vim /etc/systemd/system/shadowsocks.service[Unit]Description=Shadowsocks[Service]TimeoutStartSec=0ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json[Install]WantedBy=multi-user.targetStart shadowsocks#systemctl enable shadowsocks#systemctl start shadowsocks#systemctl status shadowsocks -lInstall Script$vim install-shadowsocks.sh, content of file from install-shadowsocks.sh#chmod +x install-shadowsocks.sh#./install-shadowsocks.shClientLinuxInstall And Use Shadowsocks Command Line Client on Linux1.Linux seriesDebian/Ubuntu:$sudo apt-get install python-pip$sudo pip install shadowsocksFedora/Centos:$sudo yum install python-setuptools   or   sudo dnf install python-setuptools$sudo easy_install pip$sudo pip install shadowsocksOpenSUSE:$sudo zypper install python-pip$sudo pip install shadowsocksArchlinux:$sudo pacman -S python-pipsudo pip install shadowsockssslocal is the client software and ssserver is the server software. On some Linux distros such as ubuntu, the shadowsocks client sslocal is installed under /usr/local/bin. On Others such as Arch sslocal is installed under /usr/bin/. Your can use whereis commandto find the exact location.user@debian:~$ whereis sslocalsslocal: /usr/local/bin/sslocal2.vim /etc/shadowsocks.json{"server":"server-ip","server_port":8000,"local_address": "127.0.0.1","local_port":1080,"password":"your-password","timeout":600,"method":"aes-256-cfb"}$sudo sslocal -c /etc/shadowsocks.jsonTo run in the background$sudo sslocal -c /etc/shadowsocks.json -d startAuto Start the Client on System Boot$sudo vi /etc/rc.localsudo sslocal -c /etc/shadowsocks.json -d startCheck if It Works#sudo systemctl status rc-local.serviceProblemShadowSocks start error: undefined symbol EVP_CIPHER_CTX_cleanupSolving:vim /usr/local/lib/python3.5/dist-packages/shadowsocks/crypto/openssl.pyVIM Command：:%s/cleanup/reset/:xReason:openssl 1.1.0 "EVP_CIPHER_CTX_cleanup" is old.WindowsDowload win-clientDowload1Dowload2 密码：jnfrConfigure1.unzip2.running3.proxyAndroidDownloadapk 5n8vIOSMac OS XSwitchyOmegaAdd SwitchyOmega pluginDowload AddressConfigure SwitchyOmega1.setting proxy2.auto switchAdd rule.3.rule list settingrule:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txtorhttps://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txtReferencehttps://zh.wikipedia.org/zh-hans/Shadowsockshttps://shadowsocks.comhttp://shadowsocks.org/http://morning.work/page/2015-12/install-shadowsocks-on-centos-7.htmlhttps://www.linuxbabe.com/desktop-linux/how-to-install-and-use-shadowsocks-command-line-clienthttps://doub.io/ss-jc10/https://kionf.com/2016/12/15/errornote-ss/https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList]]></content>
      <categories>
        
          <category> network </category>
        
      </categories>
      <tags>
        
          <tag> shadowsocks </tag>
        
          <tag> SwitchyOmega </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Debian GNU/Linux]]></title>
      <url>/linux/2018/08/06/using-debian/</url>
      <content type="text"><![CDATA[本文题目应该是“Linux 操作系统”，只因寡人平时都是使用 Debian，所以 Title 就是“Debian GNU/Linux”）。以下就是我从开始接触 Linux 到现在的一些使用笔记。写在前面我的 Linux 之路a.第一次接触 Linux 是由于大二上学期的 Linux 基础课，但是，我并没有喜欢上这个系统，因为关于 Linux 的一切，对我来说都是陌生的，我在想我既然已经对 Windows 操作系统，又何必去瞎折腾呢，况且 Windows 可以完成 Linux 上的所有事情（后来，我发现我错了）；另一方面，可能是由于授课老师的坚毅个性，让我不想再去学习它，尽管当时我自己是多么幼稚，多么可笑。b.后来，当我在听说 Linux 用来当服务器使用很好的时候，我开始尝试使用它来完成一些工作的时候，开始我有点喜欢 Linux 操作系统，不断的尝试（学习）使用 Linux，发现使用 Linux 来完成编程开发越来越完美了。c.再后来，就是现在了，能使用它搭建一些服务，使我的生活更加方便，并将一些网站之类的放在上面，下面就是平时使用 Linux 的总结，仅供参考！d.尽管工作的大部分时间都在用 Windows 操作系统，但是对 Linux 系列的折腾从未停止过。#2017-03-09,更新中……那些年用过的 Linux 操作系统1.Ubuntu 12.04/14.04/16.04;2.CentOS 6.0/7.0;3.RedHat 7;4.Debian 7/8/9;5.SUSE Linux Enterprise server 11/12;英文太差，能学好 Linux 吗？原文地址：http://cs2.swfu.edu.cn/~wx672/lecture_notes/linux/en.html原文内容：首先，从日常应用的角度来讲，Linux 和 Windows 并没有什么不同，他们都有很好的中文支持。但作为计科系的学生，我们不能只是站在应用的层面上，用它来上上网，写写报告，看看电影，听听音乐……还应该把它当做一个强大的学习和开发工具来利用。讲到学习，对于很多同学来说，英文就成了一个大问题，同时也是一个不能回避的问题。从某种程度上讲，学英文比学 Linux 更有用。因为你毕业以后很可能根本用不到 Linux，甚至可能根本用不到电脑，但我相信你肯定用得到英文。英文是你与世界交流的必要手段。我们把文盲叫做睁眼瞎，那么在全球化的今天，英文盲实在是个睁眼半瞎。IT 领域的几乎一切技术（除了算盘）都是西方发明的，英文也是一切现行 IT 技术标准（ISO, RFC, ITU, IEEE…）的通用语言。在我们每天使用的键盘上，也看不到任何一个中文字符。在这种现实条件下，如果想扩展视野，想了解掌握新技术，想在IT行业有所发展，没有良好的英文水平是根本不可能的。GNU/Linux 也是以西方为主流的技术，Linux 方面的英文材料远多于中文材料，而且质量远高于中文材料。所以说，要学好 Linux，必须要有比较好的英文阅读能力。诸位花钱进学校就是要来学习的。而学习本身就是顽强不懈、克服困难的过程。既然知道自己的英文差，那么当然应该努力提高它，克服它。其实，大家可以通过学习 Linux 来提高自己的英文能力。提高了英文能力，反过来又大大有助于 Linux 学习。学英文比学 Linux 更容易，因为它不需要你聪明，只需要你有足够的耐心。如何提高英文？学英文，当然可以如辜鴻銘那般背诵《莎士比亚全集》。但我们学IT的，以娴熟阅读技术资料为目的，那就可以比辜老前辈少花些力气。但无论如何，掌握一门新语言基本上还是个力气活，天天用，天天读，实是不二法门。使用英文桌面环境遇到问题时，尽量查阅 Linux 英文参考资料，比如： Man pages Wikipedia Tutorials定期，最好是每天，读一些英文文献，比如： IT业者必读的 RFC RFC1180, RFC791，… Ubuntu 社区杂志看英文文章的时候，遇到生词，马上查出它的意思，我推荐你用 Google dictionary, 它有 Firefox 和 Chrome 浏览器的插件，非常方便，非常快。知道这个生词是什么意思了，就把这个词记到一张纸上。然后继续看文章，再遇到生词，再查，再记录。这样一篇文章看完，你的纸上页记了不少生词，晚上睡觉前，把纸上的词都过一遍，回忆一下它们的意思，就行了，简单吧？日积月累，水滴石穿，不出三五个月，你就不再惧怕英文了。Linux 学习步骤先熟练掌握命令行的基本操作尝试安装。我推荐 Ubuntu掌握简单系统管理操作了解并适应经典开发环境 vim, emacs GCC, GDB, make git了解一些可视化开发环境，比如 eclipse, netbeans, Qt4designer, …了解 LAMP 开发环境了解其它常用工具系统管理工具网络管理工具日常工作工具娱乐Get StartedGNU's Not Unix!Wifi连接配置（configure）1.查看无线（wireless）网卡（LAN）驱动（driver）# lsmod | grep iw2.安装（Installing）无线网卡驱动# apt-get install firmware-iwlwifi wireless-tools3.向内核（kernel）中加载/移除模块（modules）# modprobe iwl49654.重启系统# reboot5.配置无线网络//查看无线网口（nerwork port）# iwconfig//开启无线网口# ifconfig wlan0 up//扫描（scaning）无线网络# iwlist wlan0 scan//连接无线网络# iwconfig wlan0 ESSID "wifi-name" KEY "password" open//执行上面的命令（command）后，发现并不能成功！！！//于是，通过如下命令继续配置//格式：wpa_passphrase &lt;ssid&gt; [passphrase]# wpa_passphrase "wifi-name" "passowrd"&gt;/etc/wpa_supplicant.conf# wpa_passphrase -B -i wlan0 -Dwext -c /etc/wpa_supplicant.conf//查看wlan0无线网口# iwconfig wlan0//执行命令获取到IP地址，成功连上WiFi# dhclient wlan06.开机自动连接WiFi配置# vim /etc/network/interfaces.d/wlan0auto wlan0allow-hotplug wlan0iface wlan0 inet dhcp   wpa-conf /etc/wpa_supplicant.conf 配置安装源(source)//配置163源：访问http://mirrors.163.com，找到镜像名为debian的目录，点击debian使用帮助，根据最新的debian版本进行选择jessie，wheezy，squeeze。从最新版本到最低版本选择$ vim /etc/apt/source.list//以Jessie为例, 编辑/etc/apt/sources.list文件, 在文件最前面添加以下条目(操作前请做好相应备份)deb http://mirrors.163.com/debian/ jessie main non-free contribdeb http://mirrors.163.com/debian/ jessie-updates main non-free contribdeb http://mirrors.163.com/debian/ jessie-backports main non-free contribdeb-src http://mirrors.163.com/debian/ jessie main non-free contribdeb-src http://mirrors.163.com/debian/ jessie-updates main non-free contribdeb-src http://mirrors.163.com/debian/ jessie-backports main non-free contribdeb http://mirrors.163.com/debian-security/ jessie/updates main non-free contribdeb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib配置系统支持中文（support chinese）安装及配置//先安装locales$ sudo aptitude install locales//配置命令$ sudo dpkg-reconfigure locales//选择编码（encode），space选择en_US.UTF-8zh_CN.GB2312zh_CN.GB18030zh_CN.GBKzh_CN.UTF-8//文件配置$ sudo vim /etc/default/locate参考资料https://wiki.debian.org/Locale中文输入法安装ibus1.Run(as root)# aptitude install ibus-table-array30 ibus-qt4 ibus-gtk2.Run(as a user)$ ibus-setup3.Addexport GTK_IM_MODULE=ibusexport XMODIFIERS=@im=ibusexport QT_IM_MODULE=ibus4.auto-start the ibus daemon on every login$ echo "ibus-daemon -d -x -r -n kde" &gt; $HOME/.kde/Autostart/ibus-daemon-autostart.sh &amp;&amp; chmod +x $HOME/.kde/Autostart/ibus-daemon-autostart.sh5.relogin6.default:Ctrl+Spacelink：https://wiki.debian.org/I18n/ibuslink2: https://wiki.debian.org/gnome-chinese-input安装UIM安装SCIM安装fcitx//1.安装fcitx及其他组件（module）$ sudo apt-get install fcitx fcitx-bin fcitx-config-common fcitx-config-gtk fcitx-data fcitx-frontend-all fcitx-googlepinyin fcitx-libs fcitx-module-x11 fcitx-modules fcitx-pinyin fcitx-table fcitx-ui-classic//2.运行及安装 UI 支持组件$ export LANG=zh_CN.utf8$ export LC_CTYPE=zh_CN.utf8$ export LC_ALL=zh_CN.utf8$ export XMODIFIERS=@im=fcitx$ fcitx &amp;//Fcitx输入法调用前端需要有 ui 动态库的支持:# aptitude install fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-ui-classic//然后，重启可用。参考资料https://wiki.debian.org/gnome-chinese-inputhttp://www.2cto.com/os/201311/255343.htmlGNOME显示最大化（maximize）和最小化（minimize）图标执行命令 gnome-tweak-tool$ gnome-tweaksor$ gnome-tweak-tool设置快捷键//Gnome-Terminal系统设置》键盘，输入名称，命令：gnome-terminal，快捷键：Super+T//文件管理器（Nautilus）命令：nautilus，快捷键：Super+e//chrome命令：google-chrome，快捷键：Super+c改变显示屏亮度# echo 300 &gt;/sys/class/backlight/intel_backlight/brightnessChrome安装FlashPlayer# update-flashplugin-nonfree --installLinux 入门Linux 系统Linux 可划分为以下四部分1.Linux 内核2.GNU 工具3.图形化桌面环境4.应用软件深入探究 Linux 内核Linus Torvalds：Linux 内核开发者。Linux 内核主要负责一下四种功能：	1.系统内存管理	2.软件程序管理	3.硬件设备管理	4.文件系统管理系统内存管理内核不仅管理服务器上的可用物理内存，还可以创建和管理虚拟内存。内核通过硬盘上的存储空间来实现虚拟内存，这块区域称为交换空间（swap space）。内核不断地交换空间和实际的物理内存之间反复交换虚拟内存中的内容。这使得系统以为它拥有比物理内存更多的可用内存。内存存储单元按组划分成很多块，这些块称作页面（page）。内核将每个内存页面放在物理内存或交换空间。然后，内核会维护一个内存页面表，指明哪些页面位于物理内存内，哪些页面被换到了磁盘上。内核会记录哪些内存页面正在使用中，并自动把一段时间未访问的内存页面复制到交换空间区域（称为换出，swapping out）——即使还有可用内存。软件程序管理Linux 操作系统将运行中的程序称为进程。内核控制着 Linux 系统如何管理运行在系统上的所有进程。内核创建了第一个进程（称为 init 进程）来启动系统上所有其他进程。Linux 操作系统的 init 系统采用了运行级。Linux 操作系统有 5个启动运行级。运行级为 1 时，只启动基本的系统进程以及一个控制台终端进程，我们称之为单用户模式。单用户模式通常用来在系统有问题时进行紧急的文件系统维护。显然，这种模式下，仅有一个人（通常是系统管理员）能登录到系统上操作数据。运行级为 3 时，大多数应用软件，比如网络支持程序，都会启动。运行级为 5 时，系统会启动 X Window 系统，允许用户通过图形化桌面窗口登录系统。Linux 系统可以通过调整启动运行级来控制整个系统的功能。硬件设备管理内核的另一职责是管理硬件设备。任何 Linux 系统需要与之通信的设备，都需要在内核代码中加入驱动程序代码。在 Linux 内核中有两种方法用于插入设备驱动程序代码：1.编译进内核的设备驱动代码2.可插入内核的设备驱动模块以前，插入设备驱动代码的唯一途径是重新编译内核。随着 Linux 内核支持的硬件设备越来越多，这个过程变得越来越低效。后来，开发人员提出了内核模块的概念。它允许将驱动代码插入到运行中的内核而无需重新编译内核。Linux 系统将硬件设备当成特殊的文件，称为设备文件。设备文件有3种分类：1.字符型设备文件：指处理数据时每次只能处理一个字符的设备。大多数类型的调制解调器和终端都是作为字符型设备文件创建的。2.块设备文件：指处理数据时每次能处理大块大数据的设备，比如硬盘。3.网络设备文件：指采用数据包发送和接受数据的设备，包括各种网卡和一个特殊的回环设备。这个回环设备允许 Linux 系统使用常见的网络编程协议同自身通讯。Linux 为系统上的每个设备都创建一种称为节点的特殊文件。与设备的所有通信都通过设备节点完成。每个节点都有唯一的数值对供 Linux 内核标识它。数值对包括一个主设备号和一个次设备号。类似的设备被划分到同样的主设备号下。次设备号用于标识主设备组下的某个特定设备。文件系统管理Linux 内核支持通过不同类型的文件系统从硬盘中读写数据。内核必须在编译时就加入对所有可能用到的文件系统的支持。下表是 Linux 系统用来读写数据的标准文件系统文件系统描述extLinux 扩展文件系统，最早的 Linux 文件系统ext2第二扩展文件系统，在ext的基础上提供更多的功能ext3第三扩展文件系统，支持日志功能ext4第四扩展文件系统，支持高级日志功能hpfsOS/2高性能文件系统jfsIBM日志文件系统iso9660ISO 9660文件系统（CD-ROM）mimixMINIX文件系统msdos微软的FAT16ncpNetware文件系统nfs网络文件系统ntfs支持Microsoft NT文件系统proc访问系统信息ReiserFS高级Linux文件系统，能提供更好的性能和硬盘恢复功能smb支持网络访问的Samba SMB文件系统sysv较早期的Unix文件系统ufsBSD文件系统umsdos建立在msdos上的类Unix文件系统vfatWindows95文件系统（FAT32）XFS高性能64位日志文件系统Linux 内核采用虚拟文件系统（Virtual File System,VFS）作为和每个文件系统交互的接口。GNU工具Linux 桌面环境Linux 发行版入门第一步，理解 Linux1.首先，以 Linux 的思维方式系统性思考问题。2.Linux 是一个面向文件的操作系统。所有的应用、管理是基于文件的。3.Linux 是一个以命令行为主要的管理方式的 OS。4.Linux 的日志非常完善，也至关重要。5.Linux 是一个以配置文件为管理基础的 OS。6.Linux 的所有应用、管理和配置，都有很多程序来辅助完成。获取帮助 &amp; 问题解决1.出现问题，先保护现场。（问题一种是已正确运行的系统出问题，另一种是新的操作或配置造成了问题）2.当怀疑有黑客入侵或病毒的情况，马上做日志备份。3.检查相关日志。4.对于新的操作或配置造成的问题，最好是养成定期备份重要文件的习惯。5.使用网络6.使用搜索命令：find，locate，whereis。。。Linux 常用命令ls (list files and directories)less (view text files)file (classify a file's contents)cp - copy files and directoriesmv - move or rename files and directoriesrm - remove files and directoriesmkdir - create directoriestype - Display information about command typewhich - Locate a commandhelp - Display reference page for shell builtinman - Display an on-line command referencechmod - modify file access rightssu - temporarily become the superusersudo - temporarily become the superuserchown - change file ownershipchgrp - change a file's group ownershipps - list the processes running on the systemkill - send a signal to one or more processes (usually to "kill" a process)jobs - an alternate way of listing your own processesbg - put a process in the backgroundfg - put a process in the forgroundLinux 网络配置基本的网络参数IP地址子网掩码网关DNS安装网络工具//Debian/Linux$ sudo apt-get install net-tools配置网络1.在 Linux 中，以太网接口被命名为：eth0、eth1等。2.lspci 命令可以查看网卡硬件信息（如果是 usb 网卡，则需要使用 lsusb 命令）3.ifconfig 命令：查看接口信息 $ ifconfig -a $ ifconfig eth04.ifup,ifdown 命令：启用、禁用一个接口 $ ifup eth0 $ ifdown eth0相关配置文件1.网卡配置文件：/etc/sysconfig/network-scripts/ifcfg-eth02.DNS 配置文件：/etc/resolv.conf3.主机名配置文件：/etc/sysconfig/network4.静态主机名配置文件：/etc/hosts网络测试1.测试网路连通性：ping 命令2.测试DNS解析：host,dig 命令3.显示路由表：ip route 命令4.追踪到达目标地址的网络路径：traceroute 命令5.mtr 命令进行网络质量测试日期时间设置Linux 时钟分为系统时钟（System Clock）和硬件时钟（Real Time Clock，简称 RTC）。系统时钟指当前 Linux Kernel 中的时钟;硬件时钟指主板上由电池供电的时钟，可在 BIOS 中进行设置。1.date 命令2.hwclock 命令，查看硬件时间//设置硬件时间$ sudo hwclock -set -date='07/17/2017 20:00'3.硬件时间与系统时钟同步$ sudo hwclock --hctosys(hc 代表硬件时间，sys 代表系统时间)$ sudo hwclock -systohcLinux 目录结构Linux 进阶篇crontab 定时执行任务对于 Linux 用户你肯定希望：     每一天早上 8:00 钟，让电脑连接上音响，并播放音乐来唤你起床；     而中午 12:00 希望 Linux 可以发一封信到你的邮件信箱，提醒你可以去吃午餐了；     另外，在每年你爱人生日的前一天，先发封信提醒你，以免忘记这么重要的一天。crontab 简单介绍crontab 命令的功能是在一定的时间间隔调度一些命令的执行。1./etc/crontab 文件在 /etc 目录下有一个 crontab 文件，这里存放有系统运行的一些调度程序。每个用户可以建立自己的调度 crontab(在 /var/spool/cron 目录下)。cron 服务每分钟不仅要读一次 /var/spool/cron 内的所有文件，还需要读一次 /etc/crontab，因此我们配置这个文件也能运用 cron 服务做一些事情。用 crontab 配置是针对某个用户的，而编辑 /etc/crontab 是针对系统的任务。2.crontab 文件格式如下：SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root       #&#22914;&#26524;&#20986;&#29616;&#38169;&#35823;&#65292;&#25110;&#32773;&#26377;&#25968;&#25454;&#36755;&#20986;&#65292;&#25968;&#25454;&#20316;&#20026;&#37038;&#20214;&#21457;&#32473;&#36825;&#20010;&#24080;&#21495;HOME=/            #&#20351;&#29992;&#32773;&#36816;&#34892;&#30340;&#36335;&#24452;,&#36825;&#37324;&#26159;&#26681;&#30446;&#24405;# run-parts注意到"run-parts"这个参数，后面可以写要运行的某个脚本。另外：/usr/lib/cron/cron.allow 表示谁能使用 crontab 命令。如果它是一个空文件表明没有一个用户能安排作业。如果这个文件不存在，而有另外一个文件。/usr/lib/cron/cron.deny,则只有不包括在这个文件中的用户才可以使用 crontab 命令。如果它是一个空文件表明任何用户都可安排作业。两个文件同时存在时，cron.allow 优先，如果都不存在，只有超级用户可以安排作业。crontab 基本格式\*****commond代表意思分时日月周&#xa0;范    围(0-59)(0-23)(1-31)(1-12)(0-6)&#xa0;“ * ”表示任意时刻“ , ”表示分割“ - ”表示一个段“ /n ”表示每 n 的单位执行一次命令后面加上 &gt;/dev/null 2&gt;&amp;1  ,标准错误重定向到标准输出实例1：实现两个周备份一次 /var/ftp 目录下的内容具体实现方法如下:   a.先新建一个 txt 文件，这里是 ftp-back-shell.txt，文件内容：* * 14 * * cd /back/ftp-back/ &amp;&amp; rsync -avzc /var/ftp ./   b.将 ftp-back.txt 文件放到 /opt/ftp-back/ 目录下    c.运行：        $ crontab /opt/ftp-back/ftp-back.txt        $ crontab -l   d.需要进行重启，配置文件生效： sudo systemctl restart crond.service实例2：实现定时插入数据1.新建 crontab.sh 脚本文件$ vim crontab.sh#!/bin/sh/usr/bin/php /home/zrg/.crontab/crontab.php2.编辑 php 文件3.设置定时任务$ crontab -e   */2 * * * * /bin/bash /home/zrg/.crontab/crontab.sh4.查看定时任务$ crontab -l重启服务使生效：sudo systemctl restart cron.service5.移除定时服务$ crontab -r示例3：备份 mysql 数据$ vim cron.sh#!/bin/shfilename=`date +%Y%m%d%H%M%S`mysqldump -u root -proot testdb&gt;/home/zrg/crontab/$filename.sql$ crontab -e0 2 * * *  /bin/bash /home/zrg/crontab/cron.sh$rccron reload一些简单示例43 21 * * * 21:43 执行0 17 * * 1 每周一的 17:00 执行0,10 17 * * 0,2,3 每周日,周二,周三的 17:00和 17:10 执行0-10 17 1 * * 毎月1日从 17:00到17:10 毎隔1分钟 执行*/10 * * * * 　　　　　　 每隔10分 执行0,10,20,30,40,50 * * * *　每隔10分 执行2 8-20/3 * * *　　　　　　8:02,11:02,14:02,17:02,20:02 执行解压命令大全另外还有不常见的，但时有遇到的：.tar.xz$ tar xpvf file.tar.xz.tgz$ tar zxf  name.tgz//解压到指定目录$ tar zxvf name.tar.gz -C ./dir$ unzip name.zip -d ./diralias 命令的使用//利用别名代替长命令$ vim ~/.bashrc                                                                                                                                     //存在这样的三行代码，意思就是检查是否存在 .bash_aliases 文件，存在就加载                 if [ -f ~/.bash_aliases ]; then                                                                                                                           . ~/.bash_aliases                                                                                                                                 fi                                                                                                                                                    //于是,新建并编辑                                                                                                                                   $ vim .bash_aliases                                                                                                                                 # shadowsocks                                                                                                                                         alias shadowsocks="sudo sslocal -c /etc/shadowsocks.json -d start"                                                                                    实用的 find 命令示例用文件名查找文件$ find -name "MyCProgram.c"//忽略大小写$ find -iname "MyCProgram.c"// 在 root 目录及其子目录下查找 passwd 文件。$ find -maxdepth 2 -name passwd// 在 root 目录下及其最大两层深度的子目录中查找 passwd 文件. (例如 root — level 1, and two sub-directories — level 2 and 3 )$ find / -maxdepth 3 -name passwd// 在第二层子目录和第四层子目录之间查找 passwd 文件。$ find -mindepth 3 -maxdepth 5 -name passwd在 find 命令查找到的文件上执行命令//下面的例子展示了 find 命令来计算所有不区分大小写的文件名为“MyCProgram.c”的文件的 MD5 验证和。{} 将会被当前文件名取代。$ find -iname "MyCProgram.c" -exec md5sum {} \;相反匹配//显示所有的名字不是 MyCProgram.c 的文件或者目录。由于 maxdepth 是 1，所以只会显示当前目录下的文件和目录。$ find -maxdepth 1 -not -iname "MyCProgram.c"使用 inode 编号查找文件//任何一个文件都有一个独一无二的 inode 编号，借此我们可以区分文件。创建两个名字相似的文件，例如一个有空格结尾，一个没有。$ touch "test-file-name "[Note: There is a space at the end]$ ls -1 test*test-file-nametest-file-name//从 ls 的输出不能区分哪个文件有空格结尾。使用选项 -i，可以看到文件的 inode 编号，借此可以区分这两个文件。$ ls -i1 test*16187429 test-file-name16187430 test-file-name//若你想执行“rm file?.txt”，下面所示的所有三个文件都会被删除。所以，采用下面的步骤来删除"file?.txt"文件。//找到每一个文件的 inode 编号。$ ls -i1804178 file1.txt804179 file2.txt804180 file?.txt//如下所示： 使用 inode 编号来删除那些具有特殊符号的文件名。$ find -inum 804180 -exec rm {} \;$ lsfile1.txt  file2.txt[Note: The file with name "file?.txt" is now removed]根据文件权限查找文件//找到具有组读权限的文件。使用下面的命令来找到当前目录下对同组用户具有读权限的文件，忽略该文件的其他权限。$ find . -perm -g=r -type f -exec ls -l {} \;//找到对组用户具有只读权限的文件。$find . -perm g=r -type f -exec ls -l {} \;  //找到对组用户具有只读权限的文件(使用八进制权限形式)。$ find . -perm 040 -type f -exec ls -l {} \;找到 home 目录及子目录下所有的空文件(0字节文件)//下面命令的输出文件绝大多数都是锁定文件盒其他程序创建的 place hoders$ find ~ -empty//只列出你 home 目录里的空文件。$ find . -maxdepth 1 -empty//只列出当年目录下的非隐藏空文件。$ find . -maxdepth 1 -empty -not -name ".*"查找 5个最大或最小的文件//下面的命令列出当前目录及子目录下的 5个最大的文件。这会需要一点时间，取决于命令需要处理的文件数量。$ find . -type f -exec ls -s {} \; | sort -n -r | head -5//查找 5个最小的文件$ find . -type f -exec ls -s {} \; | sort -n  | head -5//上面的命令中，很可能你看到的只是空文件(0字节文件)。如此，你可以使用下面的命令列出最小的文件，而不是 0字节文件。$ find . -not -empty -type f -exec ls -s {} \; | sort -n  | head -5使用 -type 查找指定文件类型的文件//只查找 socket 文件$ find . -type s//查找所有的目录$ find . -type d//查找所有的一般文件$ find . -type f//查找所有的隐藏文件和目录$ find . -type f -name ".*"$ find -type d -name ".*"通过和其他文件比较修改时间查找文件//显示在指定文件之后做出修改的文件。下面的 find 命令将显示所有的在 ordinary_file 之后创建修改的文件。$ ls -lrt$ find -newer ordinary_file通过文件大小查找文件//使用 -size 选项可以通过文件大小查找文件。//查找比指定文件大的文件$ find ~ -size +100M //给常用 find 操作取别名 //删除 c 程序产生的 core 文件。alias rmc="find . -iname core -exec rm {} \;"$ rmc用 find 命令删除大型打包文件//下面的命令删除大于 100M 的 *.zip 文件。$ find / -type f -name *.zip -size +100M -exec rm -i {} \;"nc 命令的使用介绍netcat是网络工具中的瑞士军刀，它能通过TCP和UDP在网络中读写数据。通过与其他工具结合和重定向。netcat所做的就是在两台电脑之间建立链接并返回两个数据流。你能建立一个服务器，传输文件，与朋友聊天，传输流媒体或者用它作为其它协议的独立客户端。安装// Redhat/CentOS/Fedora$ yum install nc// Debian/Ubuntu$ sudo apt-get install netcat常见使用端口扫描端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。$ nc -z -v -n 172.31.100.7 21-25可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.z 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换(谢谢@jxing 指点)v 参数指使用冗余选项（译者注：即详细输出）n 参数告诉netcat 不要使用DNS反向查询IP地址的域名Banner是一个文本，Banner是一个你连接的服务发送给你的文本信息。一旦你发现开放的端口，你可以容易的使用netcat 连接服务抓取他们的banner。$ nc -v 172.31.100.7 21聊天工具// Server$ nc -l 1234// Client$ nc 172.168.100.7 1234文件传输// Server &gt; Client$ nc -l 1234 &gt; file.txt$ nc 172.168.100.7 1234 &lt;file.txt目录传输// Server &gt; Client$ tar -cvf - dir_name | nc -l 1234$ nc -n 172.168.100.7 1234 | tar -xvf -这里在A服务器上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。在客户端我们下载该压缩包通过netcat 管道然后打开文件。如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩。// Server$ tar -cvf – dir_name| bzip2 -z | nc -l 1234// Client$ nc -n 172.31.100.7 1234 | bzip2 -d |tar -xvf -加密网络传输数据// Server$ nc localhost 1234 | mcrypt –flush –bare -F -q -d -m ecb &gt; file.txt// Client$ mcrypt –flush –bare -F -q -m ecb &lt; file.txt | nc -l 1234流视频// Server$ cat video.avi | nc -l 1234从一个视频文件中读入并重定向输出到netcat客户端// Client$ nc 172.31.100.7 1234 | mplayer -vo x11 -cache 3000 -从socket中读入数据并重定向到mplayer。克隆一个设备已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器，而你不想在重复配置一遍。假如你的系统在磁盘/dev/sda上:// Server$ dd if=/dev/sda | nc -l 1234// Client$ nc -n 172.31.100.7 1567 | dd of=/dev/sdadd是一个从磁盘读取原始数据的工具，我通过netcat服务器重定向它的输出流到其他机器并且写入到磁盘中，它会随着分区表拷贝所有的信息。但是如果我们已经做过分区并且只需要克隆root分区，我们可以根据我们系统root分区的位置，更改sda 为sda1，sda2.等等。参考资料https://blog.csdn.net/zhangxiao93/article/details/52705642利用 ssh 传输文件scp 命令格式scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]         [-l limit] [-o ssh_option] [-P port] [-S program]         [[user@]host1:]file1 ... [[user@]host2:]file2查看更多内容：$ man scp实际应用1、从服务器上下载文件scp username@servername:/path/filename /var/www/local_dir（本地目录）示例：scp root@192.168.0.101:/var/www/test.txt  把 192.168.0.101 上的 /var/www/test.txt 的文件下载到 /var/www/local_dir（本地目录）2、上传本地文件到服务器scp /path/filename username@servername:/path   例如 scp /var/www/test.php  root@192.168.0.101:/var/www/  把本机 /var/www/ 目录下的 test.php 文件上传到 192.168.0.101 这台服务器上的 /var/www/ 目录中3、从服务器下载整个目录scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）例如：scp -r root@192.168.0.101:/var/www/test  /var/www/  4、上传目录到服务器scp  -r local_dir username@servername:remote_dir例如：scp -r test  root@192.168.0.101:/var/www/ 把当前目录下的test目录上传到服务器的 /var/www/ 目录GCC 的使用简单编译$ gcc test.c -o test实质上，以上这条命令编译过程分为四个阶段进行的，即预处理（预编译，Preprocessing）、编译（Compilation）、汇编（Assembly）和连接（Linking）。1.Preprocessing$ gcc -E test.c -o test.i或$ gcc -E test.cgcc 的 -E 选项，可以让编译器在预处理后停止，并输出预处理结果。在本例中，预处理结果就是将 stdio.h 文件中的内容插入到 test.c 中了。2.Compilation$ gcc -S test.i -o test.sgcc 的 -S 选项，表示在程序编译期间，在生成汇编代码后，停止，-o 输出汇编代码文件。3.Assembly$ gcc -c test.s -o test.o对于上一小节中生成的汇编代码文件 test.s，gas 汇编器负责将其编译为目标文件4.Linkinggcc 连接器是 gas 提供的，负责将程序的目标文件与所需的所有附加的目标文件连接起来，最终生成可执行文件。附加的目标文件包括静态连接库和动态连接库。对于上一小节中生成的 test.o，将其与 Ｃ 标准输入输出库进行连接，最终生成程序 test$ gcc test.o -o test多个程序文件的编译$ gcc test1.c test2.c -o test检错$ gcc -pedantic test.c -o test//警告信息$ gcc -Wall test.c -p test//-Werror 选项，那么 GCC 会在所有产生警告的地方停止编译，迫使程序员对自己的代码进行修改$ gcc -Werror test.c -o test库文件连接1.编译可执行文件。首先我们要进行编译 test.c 为目标文件，这个时候需要执行$ gcc  –c –I /usr/dev/mysql/include test.c –o test.o2.链接。最后我们把所有目标文件链接成可执行文件:$ gcc –L /usr/dev/mysql/lib –lmysqlclient test.o –o test3.强制链接时使用静态链接库。默认情况下， GCC 在链接时优先使用动态链接库，只有当动态链接库不存在时才考虑使用静态链接库，如果需要的话可以在编译时加上 -static 选项，强制使用静态链接库。$ gcc –L /usr/dev/mysql/lib –static –lmysqlclient test.o –o test其他静态库链接时搜索路径顺序：1. ld 会去找GCC命令中的参数 -L2. 再找 gcc 的环境变量 LIBRARY_PATH3. 再找内定目录 /lib /usr/lib /usr/local/lib 这是当初 compile gcc 时写在程序内的动态链接时、执行时搜索路径顺序:1. 编译目标代码时指定的动态库搜索路径2. 环境变量 LD_LIBRARY_PATH 指定的动态库搜索路径3. 配置文件 /etc/ld.so.conf 中指定的动态库搜索路径4. 默认的动态库搜索路径 /lib5. 默认的动态库搜索路径 /usr/lib有关环境变量：LIBRARY_PATH 环境变量：指定程序静态链接库文件搜索路径LD_LIBRARY_PATH 环境变量：指定程序动态链接库文件搜索路径Referencehttp://www.cnblogs.com/ggjucheng/archive/2011/12/14/2287738.htmltop&amp;htop（系统状态监视命令）tophtop下载及安装$ git clone https://github.com/hishamhm/htop $ tar zxvf htop-2.0.2.tar.gz$ cd htop-2.0.2$ ./configure# make &amp;&amp; make install错误解决configure: error: missing libraries: libncursesSolving:$ sudo apt-get install nucurses-deviftop（网络监视命令）$ sudo apt-get install iftopaxel（下载命令）官方地址: http://axel.alioth.debian.org/描述: 替换wget命令分区Linux上挂载NTFS格式文件系统方案A（Scheme A）：使用linux-ntfs1.$ wget http://prdownloads.sourceforge.net/linux-ntfs/kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm2.# rpm -ivh kernel-module-ntfs-2.6.18-92.el5-2.1.27-0.rr.10.11.x86_64.rpm3.检查 ntfs 模块是否被加载进系统$ /sbin/modprobe ntfs [没有输出则代表存在；否则（otherwise）将会有错误信息（error message）报出（report）]$ cat /proc/filesystems [ntfs应该出现在列表中]4.查看NTFS系统的编号/sbin/fdisk -l |grep NTFS 5.#mkdir -p /mnt/win_ntfs#mount -t ntfs /dev/sda1 /mnt/win_ntfs方案B（Scheme B）：使用fuse和ntfs-3g1.# wget http://downloads.sourceforge.net/project/fuse/fuse-2.X/2.7.4/fuse-2.7.4.tar.gz?use_mirror=ncu# wget http://www.ntfs-3g.org/ntfs-3g-2009.4.4.tgz2.# tar -zxf fuse-2.7.4.tar.gz# ./configure --prefix=/usr/local/fuse-2.7.4# make # make install# tar -zxf ntfs-3g-2009.4.4.tgz# ./configure --prefix=/usr/local/ntfs-3# make # make install 3.检查fuse模块是否被加载进系统$ /sbin/modprobe fuse [没有输出则代表存在；否则将会有错误信息报出]$ cat /proc/filesystems [fuse应该出现在列表中]4.查看NTFS系统的编号 $ /sbin/fdisk -l |grep NTFS 5.#mount ntfs-3g /dev/sda1 /mnt/win_ntfs参考：http://blog.163.com/flybood@126/blog/static/41230911201062165035335/自动挂载 NTFS 格式硬盘安装 ntfs-3g$ sudo apt-get install ntfs-3g步骤1：编辑/etc/fstab$ sudo vim /etc/fstab/dev/sdb1 /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0Notice:   If /dev/sdb1 path will change due to system configuration, I recommend that you usethe UUID (Universally Unique Identifier) of the partition. To find the UUID of /dev/sdb1, enter:翻译：/dev/sdb1 路径会随着系统配置而改变，建议使用 UUID （通用唯一标识符），下面是查看 UUID 的命令。$ sudo /sbin/blkid /dev/sda1//Note down the UUID value and update /etc/fstab as follows:翻译：记录下 UUID，更新 /etc/fstab 文件。# syntax# UUID="YOUR-UID-HERE" /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0UUID="c2dbc0c5-a8fc-439e-aa93-51b0a61372e8" /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0# Owning entire file systemUUID="c2dbc0c5-a8fc-439e-aa93-51b0a61372e8" /mnt/ntfs/ ntfs uid-1000,gid-1000 0 0//保存关闭文件步骤2：创建目录$ sudo mkdir -p /mnt/ntfs步骤3：测试（Test）可用性$ sudo mount -a$ df -h$ cd /mnt/ntfs$ ls -l步骤4：卸载NTFS分区$ sudo umount /mnt/ntfs// or$ sudo umount /dev/sda1注意错误信息：“Read-only file system”提示$ mv 05Music/ /mnt/sda/sda2//bin/mv: inter-device move failed: '05Music/' to '/mnt/sda/sda2/05Music'; unable to remove target: Read-only file system//解决（Solving）：配置 /etc/fstab参考资料https://www.cyberciti.biz/faq/debian-ubuntu-linux-auto-mounting-windows-ntfs-file-system/http://www.tuicool.com/articles/ZbENfiehttps://wiki.archlinux.org/index.php/NTFS-3Ghttps://wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)https://wiki.archlinux.org/index.php/NTFS-3G_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)格式化分区命令将 /dev/sda7 硬盘格式化为 ext3 格式。mkfs -t ext3 -c /dev/sda7Boot加载选项修改#chmod +w /boot/grub/grub.cfg#vim /boot/grub/grub.cfg注释不需要的加载项！问题解决（Problem）改变 Home 目录下的目录中文名称为英文方法1$ vim ~/.config/user-dirs.dirsXDG_DESKTOP_DIR="$HOME/Desktop"XDG_DOWNLOAD_DIR="$HOME/Download"XDG_TEMPLATES_DIR="$HOME/Template"XDG_PUBLICSHARE_DIR="$HOME/Public"XDG_DOCUMENTS_DIR="$HOME/Document"XDG_MUSIC_DIR="$HOME/Music"XDG_PICTURES_DIR="$HOME/Picture"XDG_VIDEOS_DIR="$HOME/Video"方法2export LANG=en_USxdg-user-dirs-gtk-update电脑没有声音解决//安装驱动软件$ sudo apt-get install alsa-utils$ sudo apt-get install alsa-oos$ sudo apt-get install esound$ sudo apt-get install gnome-audio//检查声卡驱动$ lspci |grep Audio//检查内核模块$ lsmod |grep snd//检查系统音量$ alsamixer//alsamixer是alsa驱动的一个插件,是一个命令行下的图形设置工具.//alsamixer命令，00表示音量正常，MM表示此声道静音。可以通过M键切换//初始化声卡$ sudo alsactl init参考资料https://blog.gtwang.org/linux/ubuntu-16-04-headphone-speakers-sound-problem/http://blog.163.com/lixiangqiu_9202/blog/static/535750372012541358800/ 不能在 Sublime 编辑器（Editor）中输入中文1.下载（Download）$ git clone https://github.com/lyfeyaj/sublime-text-imfix.git2.配置（Configure）$ cd ~/sublime-text-imfix$ sudo cp ./lib/libsublime-imfix.so /opt/sublime_text/$ sudo cp ./src/subl /usr/bin/ $ LD_PRELOAD=./libsublime-imfix.so subl3.新建Shell脚本$ vim /home/zrg/sublime#!/bin/bashLD_PRELOAD=/opt/sublime_text/libsublime-imfix.so subl参考资料http://www.jianshu.com/p/bf05fb3a4709解决系统不能支持加密算法：chacha20$ sudo apt-get install m2crypto gcc -y$ wget -N --no-check-certificate https://download.libsodium.org/libsodium/releases/libsodium-1.0.8.tar.gz$ tar zxvf libsodium-1.0.8.tar.gz$ cd libsodium-1.0.8$ ./configure$ sudo make &amp;&amp; make install$ sudo echo "include ld.so.conf.d/*.conf"&gt;/etc/ld.so.conf$ sudo echo "/lib"&gt;&gt;/etc/ld.so.conf$ sudo echo "/usr/lib64"&gt;&gt;/etc/ld.so.conf$ sudo echo "/usr/local/lib"&gt;&gt;/etc/ld.so.conf$ ldconfig软件源配置不全，导致软件不能安装//Error: Can't fix the error because you are asking some packages to stay the same, that is they break the dependencies between the packages.//翻译：无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系//解决：检查安装源，进行重新配置，必要时添加debian官方安装源$ vim /etc/apt/sources.list$ sudo apt-get update.deb 转换为 .rpm下载及安装 alien1.下载:$ wget https://packages.debian.org/unstable/source/alien2.安装:$ tar xpvf alien_8.95.tar.xz $ cd alien-8.95$ make &amp;&amp; make install转换(Conversion)$ alien -r kuaipan4uk_2.0.0.5_amd64.deb软件自启动脚本实例实例：php-fpm 服务启动脚本$ sudo vim /etc/init.d/php-fpm#!/bin/sh# DateTime:2017-03-09# Author:zrg# chkconfig: - 84 16. /etc/rc.d/init.d/functions# Source networking configuration.. /etc/sysconfig/network# Check that networking is up.[ "$NETWORKING" = "no" ] &amp;&amp; exit 0phpfpm="/usr/local/php/sbin/php-fpm"prog=$(basename ${phpfpm})lockfile=/var/lock/subsys/phpfpmstart() {    [ -x ${phpfpm} ] || exit 5    echo -n $"Starting $prog: "    daemon ${phpfpm}    retval=$?    echo    [ $retval -eq 0 ] &amp;&amp; touch $lockfile    return $retval}stop() {    echo -n $"Stopping $prog: "    killproc $prog -QUIT    retval=$?    echo    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile    return $retval}restart() {    configtest || return $?    stop    start}reload() {    configtest || return $?    echo -n $"Reloading $prog: "killproc ${phpfpm} -HUP    RETVAL=$?    echo}force_reload() {    restart}configtest() {  ${phpfpm} -t}rh_status() {    status $prog}rh_status_q() {    rh_status &gt;/dev/null 2&gt;&amp;1}case "$1" in    start)        rh_status_q &amp;&amp; exit 0        $1        ;;    stop)        rh_status_q || exit 0        $1        ;;    restart|configtest)        $1        ;;    reload)        rh_status_q || exit 7        $1        ;;    status)        rh_status        ;;     *)        echo $"Usage: $0 {start|stop|status|restart|reload|configtest}"        exit 2esac脚本说明：# Source function library.  . /etc/rc.d/init.d/functions  //类似于include,require，引入文件。# Source networking configuration.  . /etc/sysconfig/network   //同理。//引入后，用到的daemon、statusNETWORKING=yes HOSTNAME=E10162//将他们作为变量赋值,判断网卡是否启动，如果你的 nginx 不走网卡，其实网络这段可以去掉//daemon便是实现上图漂亮的【 OK 】的函数.2.设置自启动# php-fpm 加入服务chkconfig --add php-fpm# php-fpm 234 级别下设置为启动chkconfig php-fpm on# 查看 php-fpm 服务当前配置chkconfig --list php-fpmphp-fpm         0:off   1:off   2:on    3:on    4:on    5:on    6:off3.php-fpm操作# 启动/关闭/重启/重载service php-fpm start/stop/restart/reload# 检查配置文件#service php-fpm configtestReferenceshttp://www.ttlsa.com/php/php-fpm-service-scripts/]]></content>
      <categories>
        
          <category> Linux </category>
        
      </categories>
      <tags>
        
          <tag> Debian </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Next Theme Tutorial]]></title>
      <url>/jekyll/2018/08/05/next-tutorial/</url>
      <content type="text"><![CDATA[  NexT is a high quality elegant Jekyll theme ported from Hexo Next. It is crafted from scratch, with love.Live PreviewScreenshots      Desktop        Sidebar    Sidebar (Post details page)  MobileInstallationCheck whether you have Ruby 2.1.0 or higher installed:ruby --versionInstall Bundler:gem install bundlerClone Jacman theme:git clone https://github.com/Simpleyyt/jekyll-theme-next.gitcd jekyll-theme-nextInstall Jekyll and other dependencies from the GitHub Pages gem:bundle installRun your Jekyll site locally:bundle exec jekyll serverMore Details：Setting up your GitHub Pages site locally with JekyllFeaturesMultiple languages support, including: English / Russian / French / German / Simplified Chinese / Traditional Chinese.Default language is English.language: en# language: zh-Hans# language: fr-FR# language: zh-hk# language: zh-tw# language: ru# language: deSet language field as following in site _config.yml to change to Chinese.language: zh-HansComment support.NexT has native support for DuoShuo and Disqus comment systems.Add the following snippets to your _config.yml:duoshuo:  enable: true  shortname: your-duoshuo-shortnameORdisqus_shortname: your-disqus-shortnameSocial MediaNexT can automatically add links to your Social Media accounts:social:  GitHub: your-github-url  Twitter: your-twitter-url  Weibo: your-weibo-url  DouBan: your-douban-url  ZhiHu: your-zhihu-urlFeed link.  Show a feed link.Set rss field in theme’s _config.yml, as the following value:  rss: false will totally disable feed link.      rss:   use sites’ feed link. This is the default option.    Follow the installation instruction in the plugin’s README. After the configuration is done for this plugin, the feed link is ready too.    rss: http://your-feed-url set specific feed link.Up to 5 code highlight themes built-in.NexT uses Tomorrow Theme with 5 themes for you to choose from.Next use normal by default. Have a preview about normal and night:Head over to Tomorrow Theme for more details.ConfigurationNexT comes with few configurations.# Menu configuration.menu:  home: /  archives: /archives# Faviconfavicon: /favicon.ico# Avatar (put the image into next/source/images/)# can be any image format supported by web browsers (JPEG,PNG,GIF,SVG,..)avatar: /default_avatar.png# Code highlight theme# available: normal | night | night eighties | night blue | night brighthighlight_theme: normal# Fancybox for image galleryfancybox: true# Specify the date when the site was setupsince: 2013Browser support]]></content>
      <categories>
        
          <category> jekyll </category>
        
      </categories>
      <tags>
        
          <tag> jekyll </tag>
        
          <tag> NexT </tag>
        
          <tag> Theme </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Emoji Test]]></title>
      <url>/2018/08/04/emoji-test/</url>
      <content type="text"><![CDATA[This is an emoji test. :smile: lol.See emoji cheat sheet for more detail :wink: : https://www.webpagefx.com/tools/emoji-cheat-sheet/.:bowtie::smile::laughing::blush::smiley::relaxed::smirk::heart_eyes::kissing_heart::kissing_closed_eyes::flushed::relieved::satisfied::grin:]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> emoji </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[HTTP 错误代码释义表]]></title>
      <url>/network/2018/01/27/http-error/</url>
      <content type="text"><![CDATA[2xx：成功CodeDescription200正常：请求已完成。201正常：请求成功并且服务器创建了新的资源。202正常：服务器已接受请求，但尚未处理。203正常：服务器已成功处理了请求，但返回的信息可能来自另一来源。204正常：服务器成功处理了请求，但没有返回任何内容。205正常：服务器成功处理了请求，但没有返回任何内容。206正常：服务器成功处理了部分 GET 请求。3xx：重定向CodeDescription301已移动 — 请求的数据具有新的位置且更改是永久的。302已找到 — 请求的数据临时具有不同 URI。303请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。304未修改 — 未按预期修改文档。305使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。306未使用 — 不再使用；保留此代码以便将来使用。4xx：客户端出现的错误表1：CodeDescriptiono400错误请求 — 请求中有语法问题，或不能满足请求。401请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。402需要付款 — 表示计费系统已有效。403禁止 — 服务器拒绝请求。404未找到 — 服务器找不到请求的网页。405禁用 — 禁用请求中指定的方法。406不接受 — 无法使用请求的内容特性响应请求的网页。407需要代理授权 — 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。408请求超时 — 服务器等候请求时发生超时。409冲突 — 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。410已删除 — 如果请求的资源已永久删除，服务器就会返回此响应。411需要有效长度 — 服务器不接受不含有效内容长度标头字段的请求。412未满足前提条件 — 服务器未满足请求者在请求中设置的其中一个前提条件。413请求实体过大 — 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。414请求的 URI 过长 — 请求的 URI（通常为网址）过长，服务器无法处理。415不支持的媒体类型 — 请求的格式不受请求页面的支持。416请求范围不符合要求 — 如果页面无法提供请求的范围，则服务器会返回此状态代码。417未满足期望值 — &gt;服务器未满足”期望”请求标头字段的要求。表2：CodeDescription401.1未授权：登录失败401.2未授权：服务器配置问题导致登录失败401.3ACL 禁止访问资源401.4未授权：授权被筛选器拒绝401.5未授权：ISAPI 或 CGI 授权失败403.1禁止访问：禁止可执行访问403.2禁止访问：禁止读访问403.3禁止访问：禁止写访问403.4禁止访问：要求 SSL403.5禁止访问：要求 SSL 128403.6禁止访问：IP 地址被拒绝403.7禁止访问：要求客户证书403.8禁止访问：禁止站点访问403.9禁止访问：连接的用户过多403.10禁止访问：配置无效403.11禁止访问：密码更改403.12禁止访问：映射器拒绝访问403.13禁止访问：客户证书已被吊销403.15禁止访问：客户访问许可过多403.16禁止访问：客户证书不可信或者无效403.17禁止访问：客户证书已经到期或者尚未生效404.1无法找到 Web 站点5xx：服务端出现的错误CodeDescription500服务器内部错误 — 服务器遇到错误，无法完成请求。501尚未实施 — 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。502错误网关 — 服务器作为网关或代理，从上游服务器收到无效响应。503服务不可用 — 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。504网关超时 — 服务器作为网关或代理，但是没有及时从上游服务器收到请求。505HTTP 版本不受支持 — 服务器不支持请求中所用的 HTTP 协议版本。]]></content>
      <categories>
        
          <category> network </category>
        
      </categories>
      <tags>
        
          <tag> HTTP </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[CCNA]]></title>
      <url>/network/2018/01/03/ccna-7th/</url>
      <content type="text"><![CDATA[网络互连基础ARP（Address Resolution Protocol，地址解析协议）&#xa0;网络分段（network segmentation）为什么要使用？随着网络的增大，用户响应非常缓慢，而LAN数据流将发生严重阻塞。&#xa0;导致LAN阻塞的常见原因:&#xa0;统一广播域或冲突域中的主机太多;&#xa0;广播风暴；&#xa0;组播数据流太多；&#xa0;带宽太低；&#xa0;使用集线器扩展网络。广播域（broadcast domain）指同一个网段中所有设备组成的集合，这些设备侦听该网段中发送的所有广播。冲突域（collision domain）以太网术语，指一种网络情形，即网段上的一台设备发送分组时，该物理网段上的其他&#xa0;所有设备都必须侦听它。MAC地址&#xa0;IP地址&#xa0;集线器&#xa0;路由器路由器实际上就是交换机——第3层交换机，用以组建互联网络。默认对广播域进行分割。&#xa0;与第2层交换机转发或过滤帧不同，路由器使用逻辑地址，并提供分组交换功能。路由器&#xa0;使用访问列表进行分组过滤。&#xa0;路由器每个接口都提供不同的广播域。交换机用途是让LAN更好地运行——优化其性能，向LAN用户提供更高的带宽。默认情况下，对冲&#xa0;突域进行分割。&#xa0;交换机每个端口都是一个独立的冲突域。网桥&#xa0;&#xa0;&#xa0;网络互联模型ISO（Intelnational Organization for Standardzation，国际标准化组织）&#xa0;OSI（Open Systems Intelconnection，开放系统互联模型）7层协议：&#xa0;应用层：文件、打印、消息、数据库和应用程序服务&#xa0;表示层：数据加密、压缩和转换服务&#xa0;会话层：对话控制&#xa0;传输层：端到端连接&#xa0;网络层：路由选择&#xa0;数据链路层：成帧&#xa0;物理层：物理拓扑"三次握手"协议&#xa0;以太网以太网以太网是一种竞用的介质访问方法，可让一个网络中的所有主机共享链接带宽。CSMA/CD（Carrier Sense Multiple Access With Collision Detection，载波侦听多路访问/冲突检测）半双工以太网使用的一种冲突监测机制。]]></content>
      <categories>
        
          <category> network </category>
        
      </categories>
      <tags>
        
          <tag> CCNA </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C Sharp List]]></title>
      <url>/2017/03/28/c-sharp-List/</url>
      <content type="text"><![CDATA[Table of Contents1. 标签2. ModelHandler.cs如果您遇到任何问题，请发送邮件至zrg1390556487@gmail.com。1 标签C#2 ModelHandler.csusing System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Linq;using System.Reflection;using System.Text;using System.Threading.Tasks;namespace ZCKJ.Common{    public class ModelHandler    {        /// &lt;summary&gt;        ///     &#20174; reader &#23545;&#35937;&#20013;&#36880;&#34892;&#35835;&#21462;&#35760;&#24405;&#24182;&#23558;&#35760;&#24405;&#36716;&#21270;&#20026; T &#31867;&#22411;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;typeparam name="T"&gt;&#30446;&#26631;&#31867;&#22411;&#21442;&#25968;&lt;/typeparam&gt;        /// &lt;param name="reader"&gt;&#23454;&#29616; IDataReader &#25509;&#21475;&#30340;&#23545;&#35937;&#12290;&lt;/param&gt;        /// &lt;returns&gt;&#25351;&#23450;&#31867;&#22411;&#30340;&#23545;&#35937;&#38598;&#21512;&#12290;&lt;/returns&gt;        public static List&lt;T&gt; ConvertToObject&lt;T&gt;(IDataReader reader)            where T : class        {            List&lt;T&gt; list = new List&lt;T&gt;();            T obj = default(T);            Type t = typeof(T);            Assembly ass = t.Assembly;            Dictionary&lt;string, PropertyInfo&gt; propertys = ModelHandler.GetFields&lt;T&gt;(reader);            PropertyInfo p = null;            if (reader != null)            {                while (reader.Read())                {                    obj = ass.CreateInstance(t.FullName) as T;                    foreach (string key in propertys.Keys)                    {                        p = propertys[key];                        p.SetValue(obj, ModelHandler.ChangeType(reader[key], p.PropertyType), null);                    }                    list.Add(obj);                }            }            return list;        }        /// &lt;summary&gt;        ///     &#20174; DataTale &#23545;&#35937;&#20013;&#36880;&#34892;&#35835;&#21462;&#35760;&#24405;&#24182;&#23558;&#35760;&#24405;&#36716;&#21270;&#20026; T &#31867;&#22411;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;typeparam name="T"&gt;&#30446;&#26631;&#31867;&#22411;&#21442;&#25968;&lt;/typeparam&gt;        /// &lt;param name="reader"&gt;DataTale &#23545;&#35937;&#12290;&lt;/param&gt;        /// &lt;returns&gt;&#25351;&#23450;&#31867;&#22411;&#30340;&#23545;&#35937;&#38598;&#21512;&#12290;&lt;/returns&gt;        public static List&lt;T&gt; ConvertToObject&lt;T&gt;(DataTable table)            where T : class        {            return table == null                ? new List&lt;T&gt;()                : ModelHandler.ConvertToObject&lt;T&gt;(table.CreateDataReader() as IDataReader);        }        /// &lt;summary&gt;        ///     &#23558;&#25968;&#25454;&#36716;&#21270;&#20026; type &#31867;&#22411;        /// &lt;/summary&gt;        /// &lt;param name="value"&gt;&#35201;&#36716;&#21270;&#30340;&#20540;&lt;/param&gt;        /// &lt;param name="type"&gt;&#30446;&#26631;&#31867;&#22411;&lt;/param&gt;        /// &lt;returns&gt;&#36716;&#21270;&#20026;&#30446;&#26631;&#31867;&#22411;&#30340; Object &#23545;&#35937;&lt;/returns&gt;        private static object ChangeType(object value, Type type)        {            if (type.FullName == typeof(string).FullName)            {                return Convert.ChangeType(Convert.IsDBNull(value) ? null : value, type);            }            else if (type.FullName == typeof(DateTime).FullName)            {                if (value != null &amp;&amp; value != DBNull.Value)                {                    NullableConverter convertor = new NullableConverter(type);                    return Convert.IsDBNull(value) ? null : convertor.ConvertFrom(value);                }                else                {                    return null;                }            }            if (type.IsGenericType &amp;&amp; type.GetGenericTypeDefinition().Equals(typeof(Nullable&lt;&gt;)))            {                NullableConverter convertor = new NullableConverter(type);                return Convert.IsDBNull(value) ? null : convertor.ConvertFrom(value);            }            return value;        }        /// &lt;summary&gt;        ///     &#33719;&#21462;reader&#23384;&#22312;&#24182;&#19988;&#22312; T &#31867;&#20013;&#21253;&#21547;&#21516;&#21517;&#21487;&#20889;&#23646;&#24615;&#30340;&#38598;&#21512;        /// &lt;/summary&gt;        /// &lt;param name="reader"&gt;        ///     &#21487;&#20889;&#22495;&#30340;&#38598;&#21512;        /// &lt;/param&gt;        /// &lt;returns&gt;        ///     &#20197;&#23646;&#24615;&#21517;&#20026;&#38190;&#65292;PropertyInfo &#20026;&#20540;&#24471;&#23383;&#20856;&#23545;&#35937;        /// &lt;/returns&gt;        private static Dictionary&lt;string, PropertyInfo&gt; GetFields&lt;T&gt;(IDataReader reader)        {            Dictionary&lt;string, PropertyInfo&gt; result = new Dictionary&lt;string, PropertyInfo&gt;();            int columnCount = reader.FieldCount;            Type t = typeof(T);            PropertyInfo[] properties = t.GetProperties();            if (properties != null)            {                List&lt;string&gt; readerFields = new List&lt;string&gt;();                for (int i = 0; i &lt; columnCount; i++)                {                    readerFields.Add(reader.GetName(i));                }                //IEnumerable&lt;PropertyInfo&gt; resList =                //    (from PropertyInfo prop in properties                //     where prop.CanWrite &amp;&amp; readerFields.Contains(prop.Name.ToUpper())                //     select prop);                IEnumerable&lt;PropertyInfo&gt; resList =                    (from PropertyInfo prop in properties                     where prop.CanWrite &amp;&amp; readerFields.Contains(prop.Name)                     select prop);                foreach (PropertyInfo p in resList)                {                    result.Add(p.Name, p);                }            }            return result;        }    }}]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[GNU Emacs]]></title>
      <url>/software/2016/06/06/using-emacs/</url>
      <content type="text"><![CDATA[快捷键一览在命令行中打开Emacs$ emacs -nw filenameDon't know how to use emacs?C表示Ctrl，M表示Alt常用的缺省Emacs按键前缀按键前缀描述C-c当前编辑模式特有的命令C-x文件和缓冲区命令C-h帮助命令M-x函数名称常用的快捷键快捷键描述快捷键描述C-x  C-c退出C-g退出一个正在运行的命令C-v查看下一屏M-v查看上一屏C-l重绘屏幕，并将光标所在行置于屏幕的中央&#xa0;&#xa0;C-f向右移（forward,前进）C-b向左移（backward，回退）C-p上一行（previous）C-n下一行（next）M-f向右移（以单词为一个单位）M-b向左移（以单词为一个单位）M-&lt;移动到所有文字最开头M-&gt;移动到所有文字的最末尾C-a移动到行首C-e移动到行尾M-a移动到句首M-e移动到句尾C-k删除光标后的内容C-y粘贴C-/撤销C-x C-u撤销C-d删除光标后的字符M-w复制C-SPACE选择内容模式C-w剪切C-x C-f新建/打开文件C-x C-s保存C-x 2分屏C-x 0切换到窗口1C-x o切换窗口C-h t查看帮助基本文件操作快捷键描述C-x C-f打开/新建文件C-x C-s保存C-x C-w另存为C-x C-v关闭当前缓冲区文件，打开新文件C-x i在当前光标位置插入文件C-x b新建/切换缓存区C-x C-b显示缓存区列表C-x k关闭当前缓存区C-x C-c退出emacs.光标移动快捷键描述C-f光标向后移动C-b光标向前移动C-p上一行C-n下一行M-f光标移动到单词尾部M-b光标移动到单词头部C-a行首C-e行尾C-v向下翻页M-v向上翻页M-&lt;到文件开头M-&gt;到文件结尾文本编辑快捷键描述M-n/C-u n重复执行后一个命令n次C-d删除后一个字符M-d删除前一个字符Del删除前一个字符M-Del删除前一个单词C-k移除一行C-@设定标志位(主要是为了粘贴剪切以及删除使用)C-w移除标记区域的内容（剪切）M-w复制标记区域的内容（复制）C-y粘贴M-y召回更早的内容 (在kill缓冲区内循环)C-t交换两个字符的位置M-t交换两个单词的位置C-x C-t交换两行的位置M-u使从光标位置到单词结尾处的字母变成大写M-l与M-u相反M-c使从光标位置开始的单词的首字母变为大写搜索快捷键描述C-s向前搜索C-r向前搜索M-%查找及替换:首先按下快捷键，输入要替换的词，RET，然后输入要替换的词，RET窗口命令快捷键描述C-x 2水平分割窗格C-x 3垂直分割窗格C-x o切换至其他窗格C-x 0关闭窗格C-x 1关闭除了光标所在窗格外所有窗格帮助C-h m查看当前模式C-h c显示快捷键绑定的命令C-h k显示快捷键绑定的命令和它的作用C-h f显示函数的功能C-h b显示当前缓冲区所有可用的快捷键C-h t打开emacs教程M-x quit退出helporg-mode 入门常用org-mode快捷键快捷键描述TAB  (org-cycle)Cycle visibility. 循环切换光标所在大纲的状态RETenter,Select this location.C-c C-n (org-next-visible-heading)Next heading.C-c C-p (org-previous-visible-heading)Previous heading.C-c C-f (org-forward-same-level)Next heading same level.C-c C-b (org-backward-same-level)Previous heading same level.C-c C-u (outline-up-heading)Backward to higher level heading.C-c C-j切换到大纲浏览状态M-RET (org-meta-return)Insert a new heading, item or row.  插入一个同级标题C-RET (org-insert-heading-respect-content)Insert a new heading at the end of the current subtree.M-LEFT/RIGHT将当前标题升/降级M-S-LEFT/RIGHT将子树升/降级M-S-UP/DOWN将子树上/下移Referencesorg-mode: 最好的文档编辑利器：http://www.cnblogs.com/holbrook/archive/2012/04/12/2444992.html自定义EmacsEmacs基础定制打开.emacs文件;; &#26174;&#31034;&#34892;&#21015;&#21495;(setq column-number-mode t)(setq line-number-mode t);; &#35774;&#32622;&#26631;&#39064;&#26639;(setq frame-title-format "Welcome to Emacs world! ");; &#31105;&#29992;&#33756;&#21333;&#26639;&#65307;F10&#24320;&#21551;&#33756;&#21333;&#26639;(menu-bar-mode nil);; &#21462;&#28040;&#24037;&#20855;&#26639;(tool-bar-mode nil);; &#21462;&#28040;&#28378;&#21160;&#26639;(set-scroll-bar-mode nil);; &#30452;&#25509;&#25171;&#24320;&#21644;&#26174;&#31034;&#22270;&#29255;(setq auto-image-file-mode t);; &#26174;&#31034;&#26102;&#38388;(display-time-mode t);; 24&#23567;&#26102;&#21046;(setq display-time-24hr-format t);; &#35774;&#32622;F11&#26368;&#22823;&#21270;(global-set-key [f11] 'maximized)(defun maximized ()(interactive)(x-send-client-message nil 0 nil "_NET_WM_STATE" 32 '(2 "_NET_WM_STATE_MAXIMIZED_HORZ" 0)) (x-send-client-message nil 0 nil "_NET_WM_STATE" 32 '(2 "_NET_WM_STATE_MAXIMIZED_VERT" 0)) )快速使用设置命令: M-x eval-buffer自定义高级配置thems, log manage, ...Emacs 主题.el~/.emacs.d///添加到.emacs文件(add-to-list 'load-path "~/.emacs.d/")(require 'pluginname)问题解决emacs不能输入中文//编辑~/.bashrc文件，加入如下内容：$ vim ~/.bashrcLC_CTYPE="zh_CN.utf8"//编辑/etc/environment文件，加入如下内容：$ sudo vim /etc/environmentLC_CTYPE="zh_CN.utf8"参考资料Emacs 从入门到精通: http://blog.chinaunix.net/uid-26185912-id-3334793.html]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> emacs </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Apache/Nginx-MySQL+PHP]]></title>
      <url>/linux/2016/03/25/Apache-Nginx-MySQL-PHP/</url>
      <content type="text"><![CDATA[关于此文档，如果你有任何问题，可以发邮件到我的邮箱，邮箱地址为 zrg1390556487@gmail.com.This is a installation process of "Apache+MySQL+PHP" source packages on linux environment.It's content only  安装Apache解压#tar jxvf httpd-2.4.18.tar.bz2#cd httpd-2.4.18/配置#./configure --prefix=/usr/local/apache2 --enable-so --with-included-apr此时可能会出现如下错误，这是因为ARP和ARP-util缺失。安装APR和APR-util到 http://apr.apache.org/download.cgi 下载apr和apr-util#tar jxvf apr-1.5.2.tar.bz2#cd apr-1.5.2/#./configure --prefix=/usr/local/apr此时，可能会出现libtool缺失，如下图所示。解决办法： 安装libtool、autoconf及automake：#zypper in autoconf libtool automake 然后执行：# autoreconf --force --install       #autoreconf --force --install       #autoreconf --force --install       之后，打开configure文件(现在使用的版本是apr-1.5.2，30212行)，注释   $RM -f "$cfgfile"，就是在前面添加“#”。重新执行./configure --prefix=/usr/local/apr，问题解决。成功标志：编译安装apr#make &amp;&amp; make install ，成功标志：接下来，安装APR-util。同样，解压配置，注意使用了--with-apr：#tar apr-util-1.5.4.tar.bz2#cd apr-util-1.5.4/# ./configure --with-apr=/usr/local/apr成功标志：#make &amp;&amp; make install ，成功标志：运行安装apache（httpd）#./configure --prefix=/usr/local/apache2 --enable-so解决办法：到https://sourceforge.net/projects/pcre/files/ 下载pcre并安装。#./configure --prefix=/usr/local/pcre成功标志：#make &amp;&amp; make install ，成功标志：进入apache目录，重新运行配置命令：#./configure --prefix=/usr/local/apache2 --enable-so ，问题解决。成功标志：#make &amp;&amp; make install ，成功标志：至此，Apache安装成功启动Apache因为是源码包安装，所以只能执行下列命令：# /usr/local/apache2/bin/apachectl start此时，出现下图错误，这是因为ServerName配置不正确的原因。解决：# vim httpd.confServerName localhost:80改完后，重启apache：# /usr/local/apache2/bin/apachectl restart可以查看开发端口号：# netstat -tnlp设置开机启动# cp /usr/local/apache2/bin/apachectl /etc/init.d# chmod 755 /etc/init.d/apachectl# chkconfig --add apachectl                   ；add对应del# chkconfig --level 35 apachectl on        ；on对应off# chkconfig --list                    ；显示开机可以自动启动的服务安装Nginx配置yum源CentOS：[nginx]name=nginx repobaseurl=http://nginx.org/packages/centos/$releasever/$basearch/gpgcheck=0enabled=1安装(Installing)yum install -y nginx//设置nginx开机自启动systemctl enable nginx.service//启动/停止/重新启动nginxsystemctl start/stop/restart nginx.service打开 HTTP 和 HTTPS 防火墙端口firewall-cmd –permanent –zone=public –add-service=httpfirewall-cmd –permanent –zone=public –add-service=httpsfirewall-cmd –reload配置Nginx/etc/nginx/conf.d/default.conf环境要求:能够正常访问网页server {    listen       80;    server_name  localhost;    #charset koi8-r;    access_log  /var/log/nginx/default.access.log  main;    location / {        root   /srv/www;        index  index.php index.html index.htm;    }    error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /srv/www;    }    # proxy the PHP scripts to Apache listening on 127.0.0.1:80    #    #location ~ \.php$ {    #    proxy_pass   http://127.0.0.1;    #}    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000    #    location ~ \.php$ {        root           /srv/www;        fastcgi_pass   127.0.0.1:9000;        fastcgi_index  index.php;        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;        include        fastcgi_params;    }    # deny access to .htaccess files, if Apache's document root    # concurs with nginx's one    #    location ~ /\.ht {        deny  all;    }}/etc/nginx/conf.d/vhosts/finance.conf环境要求：php, ThinkPHP5, pathinfo,  server {    listen       8080;    server_name  localhost;    #charset koi8-r;    access_log  /var/log/nginx/finance.access.log  main;    location / {        root   /srv/www/finance/public;        index  index.php index.html index.htm;        if (!-e $request_filename) {                rewrite  ^(.*)$ /index.php?s=/$1 last;                break;        }    }    error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /srv/www;    }    # proxy the PHP scripts to Apache listening on 127.0.0.1:80    #    #location ~ \.php$ {    #    proxy_pass   http://127.0.0.1;    #}    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000    #    location ~ \.php$ {         root           /srv/www/finance/public;         fastcgi_pass   127.0.0.1:9000;         fastcgi_index  index.php;         fastcgi_param  PHP_VALUE  "open_basedir=/srv/www/finance/:/tmp/:/proc/";         fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;         include        fastcgi_params;         set $real_script_name $fastcgi_script_name;            if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {            set $real_script_name $1;            set $path_info $2;         }         fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;         fastcgi_param SCRIPT_NAME $real_script_name;         fastcgi_param PATH_INFO $path_info;    }    # deny access to .htaccess files, if Apache's document root    # concurs with nginx's one    #    location ~ /\.ht {        deny  all;    }}nginx问题解决1. 403 Forbidden问题分析：1）检查文件或目录(/srv/www/)权限问题；2）配置检查：访问文件类型，index index.php index.html index.htm2.访问时，出现以下内容：File not found. No input file specified.问题分析：1）检查路径配置是否正确；2）检查php-fpm配置3.参考资料http://www.nginx.cn/231.htmlhttps://www.nginx.com/https://www.nginx.com/resources/wiki/start/topics/tutorials/install/安装MySQL注意：这里下载的是rpm安装包。1.rpm安装时，报如下错误，这是因为需要安装这些依赖包：或是这样：如果是第一个图所示错误，可以下载安装numactl，# wget http://mirror.centos.org/centos/6/os/x86_64/Packages/numactl-2.0.9-2.el6.x86_64.rpm# rpm -ivh numactl-2.0.9-2.el6.x86_64.rpm如果是第二个图所示错误，可以#rpm -ivh glibc-2.17-4.17.1.x86_64.rpm --force接着依次安装mysql附带软件：# rpm -ivh mysql-community-libs-5.6.28-2.sles12.x86_64.rpm# rpm -ivh mysql-community-client-5.6.28-2.sles12.x86_64.rpm# rpm -ivh mysql-community-common-5.6.28-2.sles12.x86_64.rpm# rpm -ivh mysql-community-server-5.6.28-2.sles12.x86_64.rpm在此安装过程中，可能已经安装它其他版本的mysql，可以通过删除其他版本，在进行安装。安装完成后，可以通过 # mysql_secure_installation 命令设置root用户密码。安装MariaDB//非源码安装方式yum install mariadb mariadb-server net-tools安装PHP安装php扩展jpeg官网下载地址：http://www.ijg.org/安装时需要在安装目录jpeg下新建bin，include，lib，man/man1目录。#tar -zvxf jpegsrc.v6b.tar.gz#cd jpeg-6b#CFLAGS="-O3 -fPIC" ./configure --prefix=/usr/local/jpeg6/ --enable-shared --enable-static此时可能会报出现如下错误：解决：复制config.guess和config.sub到安装目录下#cp /usr/share/libtool/config/config.guess ./#cp /usr/share/libtool/config/config.sub ./再次执行上面的配置语句。问题解决。使用64位函数库编译安装：make libdir=/usr/lib64 &amp;&amp; make libdir=/usr/lib64 install成功标志：libpnglibpng无需配置#cp scripts/makefile.std makefile#vim makefile 找到CFLAGS，加入-O3 -fPIC -I$(ZLIBINC)#make &amp;&amp; make install此时，可能会出现错误，解决：先把Zlib安装了，在重新安装libpng，如果仍然报错，运行安装zlib-devel rpm -ivh zlib-devel-1.2.8-5.1.2.x86_64.rpm重新编译出现下图提示信息，此时只需执行下面两个命令即可：#make clean在运行一下：#ldconfig    #动态链接库管理命令，freetypeFreetypr:http://download.savannah.gnu.org/releases/freetype/freetype-2.3.5.tar.gz# ./configure --prefix=/usr/local/freetype成功标志：#make &amp;&amp; make install成功标志：zlib#./configure --prefix=/usr/local/zlib成功标志：#make &amp;&amp; make install成功标志：gdCFLAGS="-O3 -fPIC" ./configure --prefix=/usr/local/gd --with-jpeg=/usr/local/jpeg  --with-png=/usr/local/lib --with-zlib=/usr/local/zlib --with-freetype=/usr/local/freetype成功标志：编译安装：# make &amp;&amp; make install可能会报如下错误，检查libpng是否安装正确。安装完成标志：curl下载地址 http://curl.haxx.se/#./configure --prefix=/usr/local/curl#make &amp;&amp; make install ，成功标志:安装php#tar zxvf php-5.4.45.tar.gz#cd php-5.4.45#./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache2/bin/apxs --with-gd  --with-jpeg-dir=/usr/local/jpeg6 --with-zlib-dir=/usr/local/zlib --with-png-dir=/usr/local/lib   --with-freetype-dir=/usr/local/freetype --with-curl=/usr/local/curl --with-mysql --with-pdo-mysql   --with-mysqli --enable-ftp --with-pcre-regex --with-mhash --enable-fpm --enable-mbstring  --enable-sockets --enable-sysvsem --enable-sysvshm --enable-pcntl --enable-mbregex --enable-zip  此时，会报下图错误，解决办法就是安装zlib-devel，# zypper in libxml2-devel -y重新执行上面的配置命令。出现字样"Thank you for using PHP."，表示成功了.成功标志：编译安装：# make &amp;&amp; make install ，成功标志：检测PHP是否安装成功请检查httpd.conf文件中，下面两行代码是否已添加：LoadModule php5_module        modules/libphp5.so...AddType application/x-httpd-php .phpAddType application/x-httpd-php-source .phps...&lt;IfModule dir_module&gt;DirectoryIndex index.php index.html&lt;/IfModule&gt;编辑完成后，重启apache： /etc/init.d/apachectl restart创建和编辑php.ini：#cp php.ini-development /usr/local/php/lib64/#cd  /usr/local/php/lib64/#cp php.ini-development php.ini#vim php.ini新建文件查看phpinfo是否都已加载并正常显示，&lt;?phpphpinfo();?&gt;bcmath扩展安装也许这个扩展会用到。一般情况下这个扩展在php安装的时候，是存在安装包中ext/bcmath目录下。利用phpize进行安装新的php扩展。#cd ext/bcmath/#/usr/local/php/bin/phpize                    ；执行(phpize的路径根据各自安装有所不同)#find /usr/local/php/ -name php-config                ；先查找php-config在哪个地方#./configure --with-php-config=/usr/local/php/bin/php-config          ；配置bcmath# make# make install# find /usr/local/php/ -name bcmath.so            ；查看bcmath.so在那个路径下现在配置php，制定扩展路径及加载so文件：需要安装其他扩展，使用同样的操作。特别提示1： 可能在make的时候，会遇到错误 错误：‘PHP_FE_END’未声明(不在函数内) -----{error: ‘PHP_FE_END’ undeclared here (not in a function)} 解决方法： 源代码有错误，进入php-5.3.18/ext/mcrypt目录 sed -i 's|PHP_FE_END|{NULL,NULL,NULL}|' ./*.c sed -i 's|ZEND_MOD_END|{NULL,NULL,NULL}|' ./*.c 再重新make &amp;&amp; make install特别提示2： openssl扩展安装，需要安装libssl-dev, $ sudo apt-get install libssl-dev特别提示3： openssl扩展安装配置时，出现错误信息：cannot find config.m4 解决：mv config0.m4 config.m4php-fpm配置cp /usr/local/php/etc/php-fpm.conf.default etc/php-fpm.confvim /usr/local/php/etc/php-fpm.confcontent:        user=username        group=groupname//开启php-fpm/usr/local/php/sbin/php-fpm startMemcache安装指南服务端安装//安装必须组件$apt-get install libevent-dev或下载libevent-dev源码安装：libevent.org or https://sourceforge.net/projects/levent///下载Memcached网址：http://memcached.org/downloads//安装Memcached$tar zxvf memcached-1.5.4.tar.gz$cd memcached-1.5.4$./configure --prefix=/usr/local/memcached --with-libevent=/usr/local/libevent$make &amp;&amp; make install或通过apt-get命令直接安装：$apt-get install memcached//启动Memcached$/usr/local/memcached/bin/memcached -m 64 -p 11211 -u nobody -vv -d-d表示在后台运行$ps aux |grep memcached客户端安装第一步，安装libmemcached库//下载libmemcached网址：https://launchpad.net///解压安装$tar zxvf libmemcached-1.0.18.tar.gz$cd libmemcached-1.0.18$./configure --prefix=/usr/local/libmemcached#make &amp;&amp; make install第二步，安装PHP memcache、memcached扩展### memcache 扩展$git clone https://github.com/websupport-sk/pecl-memcache memcache$cd memcache$/usr/local/php7/bin/phpize$./configure --with-php-config=/usr/local/php7/bin/php-config#make &amp;&amp; make install//编辑php.ini文件，加入：extension=memcache.so//重启Apache，查看memcache扩展是否加载### memcached 扩展$git clone https;//github.com/php-memcached-dev/php-memcached.git$cd php-memcached$git checkout php7 //进入php7分支$/usr/local/php7/bin/phpize$./configure --with-php-config=/usr/local/php7/bin/php-config \--with-libmemcached-dir=/usr/local/libmemcached--disable-memcached-sasl//同样，编辑PHP配置文件，加入：extension=memcached.so//重启Apache，查看memcached扩展是否加载参考资料memcache官网：http://memcache.org/Linux Memcached 安装：http://www.runoob.com/memcached/memcached-install.htmllinux下安装PHP memcached扩展：http://www.cnblogs.com/flywind/p/6021568.html编译安装Memcached勾结php7：https://www.jianshu.com/p/c7e59afabc28PHP7 下安装 memcache 和 memcached 扩展：http://www.lnmp.cn/install-memcache-and-memcached-extends-under-php7.htmlLinux下的Memcache安装：http://kimi.it/257.htmlMemcache基础教程：http://kimi.it/259.html再次声明由于每台机器安装的系统并非完全一样，安装系统时自带的包有所差异，所以该指南仅供参考。关于该指南，如果你有任何问题，你可以发邮件到我的邮箱，邮箱地址为 zrg1390556487@gmail.com参考资料https://xwsoul.com/posts/684http://php.net/http://www.apache.org/https://www.mysql.com/https://mariadb.org/]]></content>
      <categories>
        
          <category> Linux </category>
        
      </categories>
      <tags>
        
          <tag> Apache </tag>
        
          <tag> Nginx </tag>
        
          <tag> MySQL </tag>
        
          <tag> PHP </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Using Vim]]></title>
      <url>/software/2015/11/06/using-vim/</url>
      <content type="text"><![CDATA[Vim 快捷键:set nu!显示行号syntax on语法高亮度显示:set ai!设置自动缩进:100跳到指定行:/word搜索:split分割视窗(可加名称随便开启另一档案)n/N继续搜索下一处/上一处关键词u撤销Ctrl+r恢复gg=GFormart格式化y复制（v模式下）p粘贴Notice:设置完成后，发现功能没有起作用，检查一下系统下是否安装了vim-enhanced包，查询命令为：         $rpm -q vim-enhanced]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> emacs </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# Thread]]></title>
      <url>/c%23/2015/05/20/c-sharp-thead/</url>
      <content type="text"><![CDATA[线程入门创建线程using system;using system.Threading;ThreadStart entry = new ThreadStart(CalcSum);Thread workThread = new Thread(entry);//orThread workThread = new Thread(new ThreadStart(CalcSum));  //Method：static void CalcSum()  {       //do somethings.     }Thread类几个重要方法Thread类用于创建线程，ThreadPool类用于管理线程池。Thread类中几个重要的方法：1. Start()：启动线程；2. Sleep(int)：静态方法，暂停当前线程指定的毫秒数；3. Abort()：通常使用该方法来终止一个线程；4. Suspend()：该方法并不终止未完成的线程，它仅仅挂起线程，以后还可恢复；5. Resume()：恢复被Suspend()方法挂起的线程的执行。Thread.ThreadState属性Thread.ThreadState 在各种情况下的取值如下：1. Aborted：线程已停止2. AbortRequested：线程的Thread.Abort()方法已被调用，但是线程还未停止3. Background：线程在后台执行，与属性Thread.IsBackground有关(前台所有进程)4. Running：线程正在正常运行5. Stopped：线程已经被停止6. StopRequested：线程正在被要求停止7. Suspended：线程已经被挂起（此状态下，可以通过调用Resume()方法重新运行）8. SuspendRequested：线程正在要求被挂起，但是未来得及响应9. Unstarted：未调用Thread.Start()开始线程的运行10. WaitSleepJoin：线程因为调用了Wait(),Sleep()或Join()等方法处于封锁状态 设定线程优先级优先级由高到低分别是Highest，AboveNormal，Normal，BelowNormal，Lowest。默认为ThreadPriority.Normal。//示例：设定优先级为最低myThread.Priority=ThreadPriority.Lowest;线程的同步和通讯——生产者和消费者假设这样一种情况，两个线程同时维护一个队列，如果一个线程对队列中添加元素，而另外一个线程从队列中取用元素，那么我们称添加元素的线程为生产者，称取用元素的线程为消费者。lock关键字lock 关键字解决多个线程同时执行一个函数，导致数据的混乱，产生不可预料的结果的问题。lock 关键字将一段代码定义为互斥段（critical section）。互斥段在一个时刻内只允许一个线程进入执行，而其他线程必须等待。//定义如下：lock(expression) statement_block//expression代表你希望跟踪的对象，通常是对象引用。一般地，保护一个类的实例，可以使用this；保护一个静态变量（如互斥代码段在一个静态方法内部），一般使用类名就可以。//statement_block就是互斥段的代码，这段代码在一个时刻内只可能被一个线程执行。Monitor类(System.Threading)Monitor提供了使线程共享资源的方案。Monitor类可以锁定一个对象，一个线程只有得到这把锁才可以对该对象进行操作。......Queue oQueue=new Queue();......Monitor.Enter(oQueue);......//现在oQueue对象只能被当前线程操纵了Monitor.Exit(oQueue);//释放锁//为了保证线程最终都能释放锁，你可以把Monitor.Exit()方法写在try-catch-finally结构中的finally代码块里。//当拥有对象锁的线程准备释放锁时，它使用Monitor.Pulse()方法通知等待队列中的第一个线程。Monitor.Wait()和Monitor.Pulse()1. Wait()就是交出锁的使用权，使线程处于阻塞状态，直到再次获得锁的使用权。2. 当前线程调用Pulse()向队列中的下一个线程发出锁的信号。接收到脉冲后，等待线程就被移动到就绪队列中。在调用 Pulse 的线程释放锁后，就绪队列中的下一个线程（不一定是接收到脉冲的线程）将获得该锁。pulse()并不会使当前线程释放锁。实例：开辟一线程实现异步导出Excel环境介绍及实例简述环境介绍：开发语言》C#;开发工具》Visual studio 2015;Asp.Net MVC Version》5.2.3;.Net Version》6.1.3;NIPO version》2.2.1;实例简述：由于导出的Excel文件比较大，非常耗时，为了不影响对界面的其他操作，需要采用异步的方式进行导出。具体实现方法就是后台开辟一个线程将Excel导出到指定目录，然后提供下载。实现思路及准备工作思路：通过线程实现异步导出操作；通过NIPO组件将数据存到Excel文件中。准备工作：1.下载NPOI组件，http://npoi.codeplex.com/2.orcleHelper.dll实例代码UserController.csusing Project.BLL;using Project.Class;using Project.Interface;using Project.ViewModel;using System;using System.Collections.Generic;using System.IO;using System.Web.Mvc;using System.Web.Script.Serialization;namespace Project.UI{    /// &lt;summary&gt;    /// 文件信息类    /// &lt;/summary&gt;    public class FileInfoClass    {        public int count { set; get; }        public IList&lt;string&gt; d_fileList { set; get; }    }    /// &lt;summary&gt;    /// 用户控制器    /// &lt;/summary&gt;    public class UserController : BaseController    {        //用户接口        private IUserBLL iuser = new UserBLL();        //返回信息        private ReturnInfo returninfo = new ReturnInfo();        /// &lt;summary&gt;        /// 导出用户数据，返回文件列表        /// &lt;/summary&gt;        public ActionResult UserInfoExportExcel()        {            //搜索条件Model对象            SearchUserModel searchUserModel = new SearchUserModel();            //1.获取数据(具体如何获取数据，这里没有陈述)            List&lt;UserViewModel&gt; list = iuser.GetUserInfo(searchUserModel, ref returninfo) as List&lt;UserViewModel&gt;;            //2.调用方法，导出Excel            //生成文件名称（改文件名称）            var fileName = string.Format("{0}用户信息表.xls", DateTime.Now.ToString("yyyyMMddHHssmm"));            //判断目录是否存在（该目录名称）            if (!Directory.Exists(Server.MapPath("~/Downloads/用户信息")))            {                Directory.CreateDirectory(Server.MapPath("~/Downloads/用户信息"));            }            //将生成的文件保存到服务器临时文件夹中            string fullPath = Path.Combine(Server.MapPath("~/Downloads/用户信息"), fileName);            //表头            Dictionary&lt;string, string&gt; tableHeader = new Dictionary&lt;string, string&gt;            {                { "user_id","用户编号" },                { "username","用户名" },                { "sex","性别" },                { "age","年龄" },                { "tel","联系电话"},                { "email","邮箱"},                { "user_type", "用户类型" },                { "nickname", "用户昵称" }            };            //导出到Excel。(Global.asax.cs)            MvcApplication._VehicleQueueT.Enqueue(new Classes.DataExportPara { excelPath=fullPath, sheetName = "用户信息", tableHeard= tableHeader, list =list});            //获取路径            string path = Server.MapPath("~/Downloads/用户信息");            //获取所有xls文件路径            IList&lt;string&gt; fileList = GetAllFileName(path);            FileInfoClass f_info = new FileInfoClass();            f_info.count = fileList.Count;            f_info.d_fileList = fileList;            //返回文件列表            return new ContentResult            {                Content = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue }.Serialize(f_info),                ContentType = "application/json"            };        }        /// &lt;summary&gt;        /// 仅获取文件列表        /// &lt;/summary&gt;        /// &lt;returns&gt;&lt;/returns&gt;        public ActionResult GetFileLists()        {            if (!Directory.Exists(Server.MapPath("~/Downloads/用户信息")))            {                Directory.CreateDirectory(Server.MapPath("~/Downloads/用户信息"));            }            //路径            string path = Server.MapPath("~/Downloads/用户信息");            //            IList&lt;string&gt; fileList = GetAllFileName(path);            FileInfoClass f_info = new FileInfoClass();            f_info.count = fileList.Count;            f_info.d_fileList = fileList;            return new ContentResult            {                Content = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue }.Serialize(f_info),                ContentType = "application/json"            };        }        /// &lt;summary&gt;        /// 删除文件        /// &lt;/summary&gt;        /// &lt;param name="fileName"&gt;&lt;/param&gt;        /// &lt;returns&gt;&lt;/returns&gt;        public ActionResult DeleteFile(string fileName)        {            string result = "";            //路径            string filePath = Server.MapPath("~/Downloads/用户信息/"+fileName);            if (!Directory.Exists(Server.MapPath("~/Downloads/已删除文件目录")))            {                Directory.CreateDirectory(Server.MapPath("~/Downloads/已删除文件目录"));            }            string deletedFilePath = Server.MapPath("~/Downloads/已删除文件目录/"+fileName);            try            {                //System.IO.File.Delete(filePath);                //移动文件到"已删除文件目录"中                FileInfo file = new FileInfo(filePath);                file.MoveTo(deletedFilePath);                result += "成功删除文件";            }            catch (Exception)            {                result += "删除文件失败";            }            //返回操作结果            return Json(result, JsonRequestBehavior.AllowGet);        }        /// &lt;summary&gt;        /// 获取目录下的所有xls文件        /// &lt;/summary&gt;        /// &lt;param name="path"&gt;&lt;/param&gt;        /// &lt;returns&gt;&lt;/returns&gt;        private IList&lt;string&gt; GetAllFileName(string path)        {            /*List&lt;FileInfo&gt; filelist = new List&lt;FileInfo&gt;();            //if (System.IO.File.Exists(path+"\\*.xls"))            var files = Directory.GetFiles(path, "*.xls");            foreach (var file in files)            {                filelist.Add(new FileInfo(file));            }*/            IList&lt;string&gt; list = new List&lt;string&gt;();            DirectoryInfo folder = new DirectoryInfo(path);            foreach (FileInfo file in folder.GetFiles("*.xls"))            {                list.Add(file.Name);            }            return list;        }    }}Global.asax.csusing System;using System.Collections.Generic;using System.Linq;using System.Threading;using System.Web;using System.Web.Mvc;using System.Web.Optimization;using System.Web.Routing;using Project.Classes;namespace GpsProject.UI{    public class MvcApplication : System.Web.HttpApplication    {        //数据导出队列        public static Queue&lt;DataExportPara&gt; _VehicleQueueT = new Queue&lt;DataExportPara&gt;();        protected void Application_Start()        {            AreaRegistration.RegisterAllAreas();            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);            RouteConfig.RegisterRoutes(RouteTable.Routes);            BundleConfig.RegisterBundles(BundleTable.Bundles);            OutputVehicleExcel();//注册信息导出方法        }        /// &lt;summary&gt;        /// 导出信息        /// &lt;/summary&gt;        public static void OutputVehicleExcel()        {            DataExportPara exportPara = null;            ThreadPool.QueueUserWorkItem(o =&gt;            {                while (true)                {                    if (_VehicleQueueT != null &amp;&amp; _VehicleQueueT.Count &gt; 0)                    {                        exportPara = _VehicleQueueT.Dequeue();                        if (exportPara != null)                        {                            //调用方法                            DataExport.ExportExcel(exportPara.excelPath, exportPara.sheetName, exportPara.tableHeard, exportPara.list);                        }                        else                        {                            Thread.Sleep(6000);                        }                    }                    else                    {                        Thread.Sleep(6000);                    }                }            });        }    }}DataExportPara.csusing System.Collections;using System.Collections.Generic;namespace Project.Classes{    /// &lt;summary&gt;    /// 数据导出para    /// &lt;/summary&gt;    public class DataExportPara    {        /// &lt;summary&gt;        /// 导出路径        /// &lt;/summary&gt;        public string excelPath { get; set; }        /// &lt;summary&gt;        /// 数据列表        /// &lt;/summary&gt;        public IList list { get; set; }        /// &lt;summary&gt;        /// 工作表名称        /// &lt;/summary&gt;        public string sheetName { get; set; }        /// &lt;summary&gt;        /// 表头        /// &lt;/summary&gt;        public Dictionary&lt;string, string&gt; tableHeard {get;set;}    }}DataExport.csusing GpsProject.Class;using System.Collections;using System.Collections.Generic;using System.IO;namespace Project.Classes{    /// &lt;summary&gt;    /// 数据导出    /// &lt;/summary&gt;    public class DataExport    {        /// &lt;summary&gt;        /// 导出Excel到目录        /// &lt;/summary&gt;        /// &lt;param name="path"&gt;&lt;/param&gt;        /// &lt;param name="sheetName"&gt;&lt;/param&gt;        /// &lt;param name="tableHeard"&gt;&lt;/param&gt;        /// &lt;param name="list"&gt;&lt;/param&gt;        public static void ExportExcel(string path, string sheetName, Dictionary&lt;string, string&gt; tableHeard, IList list)        {            using (var exportData = NPOIExcelHelper.ExportToExcelStream(list, sheetName, tableHeard))            {                //创建一个文件                FileStream file = new FileStream(path, FileMode.Create, FileAccess.Write);                exportData.WriteTo(file);                file.Close();            }        }    }}NPOIExcelHelper.csusing System;using System.Collections.Generic;using System.IO;using System.Linq;using NPOI.SS.UserModel;using System.Collections;namespace Project.Class{    /// &lt;summary&gt;    /// NPOI    /// &lt;/summary&gt;    public class NPOIExcelHelper    {        /// &lt;summary&gt;        /// 导出Excel到文件流        /// &lt;/summary&gt;        /// &lt;param name="dt"&gt;&lt;/param&gt;        /// &lt;param name="sheetName"&gt;&lt;/param&gt;        /// &lt;param name="tableHeard"&gt;&lt;/param&gt;        /// &lt;returns&gt;文件流&lt;/returns&gt;        public static MemoryStream ExportToExcelStream(IList lists, string sheetName, Dictionary&lt;string, string&gt; tableHeard)        {            //创建一个工作簿            NPOI.HSSF.UserModel.HSSFWorkbook book = new NPOI.HSSF.UserModel.HSSFWorkbook();            NPOI.SS.UserModel.ISheet sheet = book.CreateSheet(sheetName); //创建sheet            //Excel表头            NPOI.SS.UserModel.IRow row = sheet.CreateRow(0); //创建行            ICellStyle style = book.CreateCellStyle(); //创建单元格            style.Alignment = HorizontalAlignment.Center; //对齐方式            style.VerticalAlignment = VerticalAlignment.Center;  //单元格居中对齐            #region 设置表头            List&lt;string&gt; headers = tableHeard.Keys.ToList();            for (int i = 0; i &lt; headers.Count; i++)            {                ICell cell = row.CreateCell(i);                cell.CellStyle = style;                cell.SetCellValue(tableHeard[headers[i]]);            }            /*for (int i = 0; i &lt; dt.Columns.Count; i++)            {                ICell cell = row.CreateCell(i);                cell.CellStyle = style;                cell.SetCellValue(dt.Columns[i].ColumnName);            }*/            #endregion            #region 填充数据            int rowIndex = 1;// 从第二行开始赋值(第一行已设置为单元头)            if (lists != null &amp;&amp; lists.Count &gt; 0)            {                foreach (var list in lists)                {                    IRow rowTemp = sheet.CreateRow(rowIndex);                    for (int i = 0; i &lt; headers.Count; i++)                    {                        string cellValue = ""; // 单元格的值                        object properotyValue = null; // 属性的值                        System.Reflection.PropertyInfo properotyInfo = null; // 属性的信息                        if (headers[i].IndexOf(".") &gt; 0)                        {                            // 3.1.1 解析子类属性(这里只解析1层子类，多层子类未处理)                            string[] properotyArray = headers[i].Split(new string[] { "." }, StringSplitOptions.RemoveEmptyEntries);                            string subClassName = properotyArray[0]; // '.'前面的为子类的名称                            string subClassProperotyName = properotyArray[1]; // '.'后面的为子类的属性名称                            System.Reflection.PropertyInfo subClassInfo = list.GetType().GetProperty(subClassName); // 获取子类的类型                            if (subClassInfo != null)                            {                                // 3.1.2 获取子类的实例                                var subClassEn = list.GetType().GetProperty(subClassName).GetValue(list, null);                                // 3.1.3 根据属性名称获取子类里的属性类型                                properotyInfo = subClassInfo.PropertyType.GetProperty(subClassProperotyName);                                if (properotyInfo != null)                                {                                    properotyValue = properotyInfo.GetValue(subClassEn, null); // 获取子类属性的值                                }                            }                        }                        else                        {                            // 3.2 若不是子类的属性，直接根据属性名称获取对象对应的属性                            properotyInfo = list.GetType().GetProperty(headers[i]);                            if (properotyInfo != null)                            {                                properotyValue = properotyInfo.GetValue(list, null);                            }                        }                        // 3.3 属性值经过转换赋值给单元格值                        if (properotyValue != null)                        {                            cellValue = properotyValue.ToString();                            // 3.3.1 对时间初始值赋值为空                            if (cellValue.Trim() == "0001/1/1 0:00:00" || cellValue.Trim() == "0001/1/1 23:59:59")                            {                                cellValue = "";                            }                        }                        // 3.4 填充到Excel的单元格里                        ICell icellcontent = rowTemp.CreateCell(i);                        //icellcontent.CellStyle = Getcellstyle(workbook, cellStylecontent, fontcontent, stylexls.默认);                        icellcontent.SetCellValue(cellValue);                    }                    rowIndex++;                    //达到65535行，跳出循环                    if (rowIndex== 65535)                    {                        break;                    }                }            }            else            {                //导出空数据                sheet.AddMergedRegion(new NPOI.SS.Util.CellRangeAddress(2, 2, 0, headers.Count - 1));                IRow row2 = sheet.CreateRow(1);                ICell icellkong = row2.CreateCell(0);                //  icellkong.CellStyle = Getcellstyle(workbook, stylexls.默认);                string str = "没有满足条件的数据可导出";                icellkong.SetCellValue(str);            }            /* for (int i = 1; i &lt;= dt.Rows.Count; i++)//遍历DataTable行         {             DataRow dataRow = dt.Rows[i - 1];             row = sheet.CreateRow(i);//在工作表中添加一行             for (int j = 0; j &lt; dt.Columns.Count; j++)//遍历DataTable列             {                 ICell cell = row.CreateCell(j);//在行中添加一列                 cell.SetCellValue(dataRow[j].ToString());//设置列的内容                }         }*/            #endregion            MemoryStream ms = new MemoryStream();            book.Write(ms);            return ms; //返回文件流        }    }}小结在阅读别人的文章时，认真。实例：利用线程监听模拟车辆进出智能化停车场实例简述实现效果主要代码Main.csprivate void Main_Load(object sender, EventArgs e){    MessagePrint.UpdateEventInfo += new MessagePrint.ShowEventInfoHandler(UpdateRuntimeInfo);    //&#35774;&#32622;&#24320;&#22987;&#12289;&#32467;&#26463;&#26102;&#38388;&#20026;00:00:00    dateTimePicker_InStart.Text = ConfigInfoHelper.InStartRunTime;    dateTimePicker_InEnd.Text = ConfigInfoHelper.InEndRunTime;    dateTimePicker_OutStart.Text = ConfigInfoHelper.OutStartRunTime;    dateTimePicker_OutEnd.Text = ConfigInfoHelper.OutEndRunTime;    //&#33719;&#21462;&#40664;&#35748;&#26102;&#38388;    BTModel.InStartRunTime = ConfigInfoHelper.InStartRunTime;    BTModel.InEndRunTime = ConfigInfoHelper.InEndRunTime;    BTModel.OutStartRunTime = ConfigInfoHelper.OutStartRunTime;    BTModel.OutEndRunTime = ConfigInfoHelper.OutEndRunTime;    vehicleio = new VehicleIO(BTModel);    vehicleio.StartServer();}/// &lt;summary&gt;/// &#24212;&#29992;&#26356;&#25913;/// &lt;/summary&gt;/// &lt;param name="sender"&gt;&lt;/param&gt;/// &lt;param name="e"&gt;&lt;/param&gt;private void ApplyChanged_Click(object sender, EventArgs e){    //&#20808;&#20572;&#27490;&#30417;&#21548;&#32447;&#31243;    vehicleio.StopServer();    BTModel.InStartRunTime = dateTimePicker_InStart.Text;    BTModel.InEndRunTime = dateTimePicker_InEnd.Text;    BTModel.OutStartRunTime = dateTimePicker_OutStart.Text;    BTModel.OutEndRunTime = dateTimePicker_OutEnd.Text;    vehicleio = new VehicleIO(BTModel);    vehicleio.StartServer();}VehicleIO.csprivate string InStartRunTime="";//&#22253;&#21306;&#36827;&#22330;&#24320;&#21551;&#26102;&#38388;private string InEndRunTime = "";//&#22253;&#21306;&#36827;&#22330;&#32467;&#26463;&#26102;&#38388;private string OutStartRunTime = "";//&#22253;&#21306;&#20986;&#22330;&#24320;&#21551;&#26102;&#38388;private string OutEndRunTime = "";//&#22253;&#21306;&#20986;&#22330;&#32467;&#26463;&#26102;&#38388;public VehicleIO(RunTimeModel btModel){    InStartRunTime = btModel.InStartRunTime;    InEndRunTime = btModel.InEndRunTime;    OutStartRunTime = btModel.OutStartRunTime;    OutEndRunTime = btModel.OutEndRunTime;}private Thread thread = null;//&#21021;&#22987;&#20540;private int sendLocationInterval = 3;//new &#36710;&#36742;&#36827;&#20986;&#22253;&#21306;&#25968;&#25454;&#27169;&#22411;private VehicleIOModel iomodel = new VehicleIOModel();/// &lt;summary&gt;/// &#24320;&#22987;&#26381;&#21153;/// &lt;/summary&gt;public void StartServer(){    ThreadStart iothread = new ThreadStart(working);    thread = new Thread(iothread);    thread.Start();}/// &lt;summary&gt;/// &#20572;&#27490;&#26381;&#21153;/// &lt;/summary&gt;public void StopServer(){    if (thread != null &amp;&amp; thread.IsAlive)    {        thread.Abort();    }}/// &lt;summary&gt;/// &#25346;&#36215;&#26381;&#21153;/// &lt;/summary&gt;public void SuspendServer(){    if (thread.ThreadState == ThreadState.Running)    {        thread.Suspend();    }}/// &lt;summary&gt;/// &#24674;&#22797;&#26381;&#21153;/// &lt;/summary&gt;public void ResumeServer(){    if (thread.ThreadState == ThreadState.Suspended)    {        thread.Resume();    }}/// &lt;summary&gt;/// work./// &lt;/summary&gt;private void working(){    MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#36827;&#20986;&#22330;&#31995;&#32479;&#24320;&#21551;!");    while (true)    {        #region &#36827;&#22253;&#21306;        if (DateTime.Now.ToLongTimeString().Equals(InStartRunTime))        {            MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#20837;&#22330;&#36947;&#21475;&#24320;&#21551;&#65292;&#36710;&#36742;&#24320;&#22987;&#36827;&#20837;&#22253;&#21306;&#65281;");            DataTable dtVehicleInInfo = null;            try            {                //&#33719;&#21462;&#26410;&#20837;&#22330;&#30340;&#21345;&#21495;                dtVehicleInInfo = VehicleIODal.GetInstance().GetVehicleCardInInfo();            }            catch (Exception exc)            {                MessagePrint.SendEventInfo(1, true, "&#26410;&#33021;&#26597;&#35810;&#21040;&#25968;&#25454;&#65292;&#35831;&#26816;&#26597;&#25968;&#25454;&#24211;&#36830;&#25509;&#20018;" + exc);            }            if (dtVehicleInInfo.Rows.Count &gt; 0)            {                MessagePrint.SendEventInfo(1, true, "&#24050;&#26597;&#35810;&#21040;&#25152;&#26377;&#21487;&#20197;&#36827;&#20837;&#22253;&#21306;&#30340;&#36710;&#36742;&#25968;&#25454;&#65292;&#27491;&#22312;&#20934;&#22791;&#36827;&#20837;&#22253;&#21306;&#8230;&#8230;");                for (int i = 0; i &lt; dtVehicleInInfo.Rows.Count; i++)                {                    string cardNo = dtVehicleInInfo.Rows[i]["card_no"].ToString();                    MessagePrint.SendEventInfo(1, true, "&#21345;&#21495;&#20026;&#8220;" + cardNo + "&#8221;&#30340;&#36710;&#36742;&#65292;&#27491;&#22312;&#36827;&#20837;&#22253;&#21306;&#8230;&#8230;");                    //&#36825;&#37324;&#35760;&#24405;&#36827;&#20837;&#20449;&#24687;...&#30053;                    //                    //&#33719;&#21462;&#19968;&#20010;&#38543;&#26426;&#25968;(min 20,max 200,number 1)                    int rand = Convert.ToInt32(getRandom(20, 150, 1));                    MessagePrint.SendEventInfo(1, true, "&#19979;&#19968;&#36742;&#36710;&#36742;&#23558;&#22312;" + sendLocationInterval * rand / 60 + "&#20998;&#38047;&#21518;&#25269;&#36798;&#22253;&#21306;");                    if (DateTime.Now.ToLongTimeString().Equals(InEndRunTime) || DateTime.Now.ToLongTimeString().CompareTo(InEndRunTime) &gt; 0)                    {                        MessagePrint.SendEventInfo(1, true, "&#22253;&#21306;&#20837;&#22330;&#36947;&#21475;&#20851;&#38381;&#65292;&#20572;&#27490;&#36710;&#36742;&#20837;&#22330;&#65281;&#20837;&#22330;&#36947;&#21475;&#23558;&#20250;&#22312; " + InStartRunTime + " &#20877;&#27425;&#24320;&#21551;&#65281;");                        break;                    }                    else                    {                        Thread.Sleep(sendLocationInterval * 1000 * rand);                    }                }                MessagePrint.SendEventInfo(1, true, "&#27880;&#24847;&#65306;&#36710;&#36742;&#36827;&#20837;&#22253;&#21306;&#25805;&#20316;&#23436;&#25104;&#65281;");            }            else            {                MessagePrint.SendEventInfo(1, true, "&#30446;&#21069;&#27809;&#26377;&#26597;&#35810;&#21040;&#35201;&#36827;&#20837;&#22253;&#21306;&#30340;&#36710;&#36742;&#12290;");            }        }        #endregion        #region &#20986;&#22253;&#21306;        //&#19982;&#36827;&#22253;&#21306;&#20195;&#30721;&#19968;&#33268;&#65292;&#30053;        #endregion    }}其他//显示实时时间#region &#36816;&#34892;&#26102;&#26174;&#31034;&#23454;&#26102;&#26102;&#38388;new Thread(() =&gt;{    while (true)    {        try        {            labelTime.BeginInvoke(new MethodInvoker(() =&gt; labelTime.Text = DateTime.Now.ToString()));        }        catch (Exception)        {        }        Thread.Sleep(1000);    }}){ IsBackground = true }.Start();#endregion//随机数获取/// &lt;summary&gt;/// &#33719;&#21462;&#35268;&#23450;&#33539;&#22260;&#20869;&#30340;n&#20010;&#38543;&#26426;&#25968;/// &lt;/summary&gt;/// &lt;param name="min_value"&gt;&#38543;&#26426;&#25968;&#19979;&#38480;&lt;/param&gt;/// &lt;param name="max_value"&gt;&#38543;&#26426;&#25968;&#19978;&#38480;&lt;/param&gt;/// &lt;param name="number"&gt;&#38543;&#26426;&#25968;&#37327;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;private string getRandom(int min_value, int max_value, int number){    Random random = new Random();    ArrayList arr = new ArrayList();    int temp = 0;    for (int i = 0; i &lt; number; i++)    {        temp = random.Next(min_value, max_value); //&#38543;&#26426;&#21462;&#25968;        arr.Add(temp);    }    string str = "";    for (int j = 0; j &lt; arr.Count; j++)    {        str += arr[j].ToString() + ",";    }    return str.Substring(0, str.LastIndexOf(","));}参考资料http://www.cnblogs.com/StupidsCat/archive/2013/01/05/2845505.html  ]]></content>
      <categories>
        
          <category> C# </category>
        
      </categories>
      <tags>
        
          <tag> Thread </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Install SVN in Linux]]></title>
      <url>/software/2014/10/15/using-SVN/</url>
      <content type="text"><![CDATA[If you have questions, please send email to zrg1390556487@gmail.com.Installation environmentLinux kernel version: 3.10.0 OS: CentOS 7software: subversionInstallFirst Method:source package installDownload and decompressionOfficial Site: https://www.visualsvn.comDowload:        1. wget http://subversion.tigris.org/downloads/subversion-1.6.1.tar.gz        2. wget http://subversion.tigris.org/downloads/subversion-deps-1.6.1.tar.gzDecompression command:        tar zxvf subversion-1.6.1.tar.gz        tar zxvf subversion-deps-1.6.1.tar.gzCompile and installCommand:        ./configure --prefix=/usr/local/svn/        make &amp;&amp; make installAdd command of svn to pathComand:       echo "export PATH=$PATH:/usr/local/svn/bin/" &gt;&gt; /etc/profile       source /etc/profileSecond Method:yum installyum install subversion mod_dav_svnBuild warehouse of testBuild root directory of svnmkdir -p /opt/svnBuild warehoust of testmkdir -p /opt/svn/svntest/svnadmin create /opt/svn/svntest/Configure1.To directory of configure,There are three file here.   cd /opt/svn/svntest/conf/authz: Configure file about setting permissions of users.passwd:  Configure file about setting username and password.svnserve.conf: Configure file about svn.2.svnserve.confvim svnserve.confedit:     [general]     anon-access = none     auth-access = write     password-db = passwd     authz-db = authz3.authzadd:    [svntest:/]    92csz.com = rw # add a user(92csz.com),read and write.4.passwdedit:    92csz.com = 123456 # password is 123456ClientThis is windows client.StartStart service of SVNsvnserve -d -r /opt/svn/Check servicenetstat -aux |grep svnrestult:        tcp 000.0.0.0:3690.0.0.0:*  LISTEN  8646/svnserveChange permission of userCommand:        chmod -R 775 /opt/svn/ or     chmod -R o+rw /opt/svnTest by clientOpen svn client(right),Enter IP address of svn server and warehouse nameexmple:       svn://192.168.120.166/svntestApache and SubversionAdd this config file to apacheLoadModule dav_svn_module     modules/mod_dav_svn.soLoadModule authz_svn_module   modules/mod_authz_svn.so&lt;Location /svn&gt;   DAV svn   SVNParentPath /var/www/unixmensvn   AuthType Basic   AuthName "Subversion repositories"   AuthUserFile /etc/svn-auth-users   Require valid-user&lt;/Location&gt;Create SVN usershtpasswd -cm /etc/svn-auth-users testuser1Create and configure SVN repositorymkdir /var/www/unixmensvncd  /var/www/unixmensvnsvnadmin create repochown -R apache.apache repo# If you still have issues with SELinux Security please apply this: chcon -R -t httpd_sys_content_t /var/www/unixmensvn/repochcon -R -t httpd_sys_rw_content_t /var/www/unixmensvn/repoYou can open the http and https on the file with thi wayfirewall-cmd --permanent --zone=public --add-service=httpfirewall-cmd --permanent --zone=public --add-service=httpsfirewall-cmd --reloadMake trunk, branches and tags structure under repomkdir -p /tmp/svn-structure-template/{trunk,branches,tags}svn import -m "Initial repository" /tmp/svn-structure-template   file:///var/www/unixmensvn/repo/Adding         /tmp/svn-structure-template/branchesAdding         /tmp/svn-structure-template/tagsAdding         /tmp/svn-structure-template/trunkCommitted revision 1.Done!Question问题11.svn: Can’t open file ‘***/txn-current-lock’: Permission deniedSolve:      Severth(Vew 7th section).问题22.Happen "authorization failed" error clientSolve:      Check configure.### Evey establishment of a lirary need to be configured.This is very important.问题33.When committing,error:         post commit FS processing had error:         "sqlite:attempt to write a readonly database"Solve:      into /opt/svn/wp-job/db , there is a file "rep-cache.db"chown -R zrg.zrggroup rep-cache.db]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> SVN </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Subversion、Git和GitHub]]></title>
      <url>/software/2014/07/28/revision-control/</url>
      <content type="text"><![CDATA[如果你有任何问题，可以发邮件到zrg1390556487@gmail.com。Subversion官网地址http://subversion.apache.org/https://tortoisesvn.net/TortoiseSVN进行增量发布1.右键》选择TortoiseSVN-&gt;Show Log（显示日志）2.选中更新版本段》右键选择Compare revisions（版本比较）3.全选》右键选择Export selection to…（导出所选文件到…）关于GitHub官网地址https://github.com/简单介绍GitHub是一个利用Git进行版本控制、专门用于存放软件代码与内容的共享虚拟主机服务。它由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成。GitHub同时提供付费账户和免费账户。GitHub支持版本下载 [[https://code.google.com/p/git-osx-installer/downloads/list?can=3][OSX 版]]下载 [[https://git-for-windows.github.io/][git Windows 版]]下载 [[http://book.git-scm.com/2_installing_git.html][git Linux 版]]Git与SVN的区别1.Git是分布式的，SVN不是；2.Git把内容按元数据方式存储，而SVN是按文件；3.Git分支与SVN的分支不同；4.Git没有一个全局的版本号，而SVN有；5.Git的内容完整性要优于SVN：Git内容存储使用的是SHA-1算法。。基本概念Repository(仓库)用于存放项目源代码。Star(收藏)收藏项目Fork(复制克隆项目)Pull Request(发送请求)基于Fork，修改或删除代码提交请求。Watch(关注)假设项目有任何更新，第一时间收到通知消息。Issue(事务卡片)发现了代码存在BUG，但是目前没有成型代码，需要讨论时使用。使用GitHub代码上传方式SSH方式传输使用SSH方式，在提交时，不需要输入用户名和密码。1.首先在本地创建ssh key，一直回车。$ ssh-keygen -t rsa -C "your_email@youremail.com"成功的话会在~/目录下生成.ssh文件夹，进入.ssh目录，打开id_rsa.pub文件，复制里面的key。2.进入github官网上，点击个人中心的 Account Settings（账户配置），左边选择"SSH Keys" &gt; "Add SSH Key",title自定义填写，然后将复制的key粘贴到GitHub的文本框中。下面是添加好的SSH Keys示例：图：3.验证是否成功:$ ssh -T git@github.com HTTPS方式传输使用条件：1）本地配置了global；2）需要输入用户名和密码推送代码开源项目贡献流程1.新建Issue：提交问题或建议或想法。2.Pull Request：Fork项目，修改代码，发起修改请求。安装与配置Git安装git安装命令1.Ubuntu 10.10(maverick)或更新版本，Debian(squeeze)或更新版本：$ sudo aptitude install git$ sudo aptitude install git-doc git-svn git-email gitk2.Ubuntu 10.04(lucid)或更老版本，Debian(lenny)或更老版本：$ sudo aptitude install git-core$ sudo aptitude install git-doc git-svn git-email gitk3.RHEL、Fedora、CentOS:$ yum install git$ yum install git-svn git-email gitk查看版本$git --version配置git1.设置username和email，因为github每次commit都会记录他们。$ git config --global user.name "your name" //配置用户名$ git config --global user.email "your_email@youremail.com" //配置邮箱-- 配置中文支持//中文支持UTF-8：$ git config --global core.quotepath false//中文支持GBK：$ git config --global i18n.logOutputEncoding gbk//录入提交说明的字符集：$ git config --global i18n.commitEncoding gbk2.查看配置信息$ git config -l3.删除配置$ git config --unset --global user.name$ git config --unset --global user.email开始使用Git一些基本操作创建新仓库//仓库初始化：新建目录，进入，执行如下命令：$ git init查看仓库状态$git status检出仓库//本地仓库$ git clone /path/to/repository//远端仓库$ git clone username@host:/path/to/repository$ git clone git@github.com:xxx/hello_world.git //GitHub//获取最新仓库分支内容(update)$ git pull$ git pull orgion feature-A删除文件//1.删除文件$ rm test.php//2.从Git仓库中删除文件$ git rm  test.php//3.提交$ git commit -m "..."$ git push提交过程操作工作流你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 工作目录，它持有实际文；第二个是 缓存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，指向你最近一次提交后的结果。图：图：提交过程1.添加：添加到缓存区$ git add &lt;filename&gt;$ git add -A$ git add *2.提交：实际提交改动$ git commit -m "Description"3.推送：提交到远端仓库$ git push origin master //master为分支名称如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：$ git remote add origin &lt;server&gt;//推送至远程仓库更改提交的操作//回溯历史版本$ git reset --hard 哈希值//冲突解决在冲突发生时，往往需要删除其中之一。$git fetch origin //获取$git merge origin/master //合并//修改提交信息$ git commit --amend$ git log --graph //查看提交日志中的相应内容//压缩历史提交$ git rebase -i$ git rebase -i HEAD~2 //在历史记录中合并为一次完美的提交配置免登录提交代码$ vim .git/config[remote "origin"]    url=https://github.com/&#29992;&#25143;&#21517;/&#20179;&#24211;&#21517;.git&#20462;&#25913;&#20026;&#65306;[remote "origin"]    url=https://&#29992;&#25143;&#21517;:&#23494;&#30721;@github.com/&#29992;&#25143;&#21517;/&#20179;&#24211;&#21517;.git分支分支的创建分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”。在其他分支上进行开发，完成后再将它们合并到主分支上。图3：//创建分支$ git branch &lt;BranchName&gt;//创建分支并切换$ git checkout -b &lt;BranchName&gt;//切换回主分支：$ git checkout master//分支删掉：$ git branch -d &lt;BranchName&gt;//显示分支$git branch//除非你将分支推送到远端仓库，不然该分支就是不为他人所见的：$ git push origin &lt;branch&gt;更新与合并分支要更新你的本地仓库至最新改动，执行：$ git pull要合并其他分支到你的当前分支（例如 master），执行：$ git merge &lt;branch&gt;在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：$ git add &lt;filename&gt;在合并改动之前，你可以使用如下命令预览差异：$ git diff &lt;source_branch&gt; &lt;target_branch&gt;标签$ git tag //显示所有标签为软件发布创建标签是推荐的。这个概念在SVN中也有。你可以执行如下命令创建一个叫做1.0.0的标签:$ git tag 1.0.0 1b2e1d63ff //1b2e1d63ff是你想要标记的提交 ID 的前 10 位字符。$ git tag -a V0.1 -m "版本0.1"$ git show V0.1//确认对应内容 可以使用下列命令获取提交 ID：$ git log日志、差别对比//查看提交日志$git log //查看提交日志$git reflog //查看所有操作日志$git log -p README.md //显示文件的改动，不加具体文件可以查看全部文件的改动日志$git log --pretty=short //查看第一行简述日志信息$git log README.md //只显示指定文件的日志信息$git log --graph //以图表形式输出分支提交日志//查看更改前后的差别$git diff $git diff HEAD //查看工作树和最新提交的差别替换本地改动假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：$ git checkout -- &lt;filename&gt;此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：$ git fetch origin$ git reset --hard origin/master实用小贴士//内建的图形化 git：$ gitk//彩色的 git 输出：$ git config color.ui true//显示历史记录时，每个提交的信息只显示一行：$ git config format.pretty oneline//交互式添加文件到暂存区：$ git add -i“.gitignore” 文件定义Specifies intentionally untracked files to ignore描述Github Pages搭建网站新建仓库搭建1.创建个人站点，新建仓库。（注：仓库名必须为【用户名.github.io】）2.在新建的仓库下，新建index.html文件即可。注：(1)Github Pages仅支持静态网页;(2)仓库里面只能是.html文件项目仓库下搭建1.进入项目仓库主页，点击settings。2.找到【Github Pages】，点击【Change theme】，选择主题来自动生成主题页面。3.访问：https://用户名.github.io/仓库名参考资料Git分支：http://www.open-open.com/lib/view/open1328069889514.htmlhttps://git-scm.com/book/en/v2《GitHub入门与实践》[日]大塚弘记  //书籍https://github.com //GitHub官网http://www.worldhello.net/gotgit/01-meet-git/050-install-on-windows-cygwin.html //Cygwin for Windowshttp://www.bootcss.com/p/git-guide/http://www.oschina.net/news/12542/git-and-svn]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> Subversion </tag>
        
          <tag> Git </tag>
        
          <tag> GitHub </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# File]]></title>
      <url>/c%23/2014/06/10/c-sharp-file/</url>
      <content type="text"><![CDATA[如果您遇到任何问题，请发送邮件至zrg1390556487@gmail.com。文件操作文件名处理//&#26367;&#25442;&#25481;&#38750;&#27861;&#23383;&#31526;fileName = fileName.Replace(":", "_").Replace(" ", "_").Replace("\\", "_").Replace("/", "_");获取目录下所有文件的文件名String path = @"X:\xxx\xxx";//&#31532;&#19968;&#31181;&#26041;&#27861;var files = Directory.GetFiles(path, "*.txt");foreach (var file in files)    Console.WriteLine(file);//&#31532;&#20108;&#31181;&#26041;&#27861;DirectoryInfo folder = new DirectoryInfo(path);foreach (FileInfo file in folder.GetFiles("*.txt")){    Console.WriteLine(file.FullName);}C#判断文件和目录是否存在，不存在则创建&#25991;&#20214;&#65306;if (File.Exists(Server.MapPath("~/upimg/Data.html"))){   File.Create(MapPath("~/upimg/Data.html"));//&#21019;&#24314;&#35813;&#25991;&#20214;}&#25991;&#20214;&#22841;&#65306;if (!Directory.Exists(Server.MapPath("~/upimg/hufu"))){   Directory.CreateDirectory(Server.MapPath("~/upimg/hufu"));}删除文件/// &lt;summary&gt;/// &#21024;&#38500;&#21333;&#20010;&#25991;&#20214;/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#30456;&#23545;&#36335;&#24452;&lt;/param&gt;public static bool DeleteFile(string _filepath){   if (string.IsNullOrEmpty(_filepath))   {       return false;   }   string fullpath = GetMapPath(_filepath);   if (File.Exists(fullpath))   {       File.Delete(fullpath);       return true;   }   return false;}/// &lt;summary&gt;/// &#21024;&#38500;&#19978;&#20256;&#30340;&#25991;&#20214;(&#21450;&#32553;&#30053;&#22270;)/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&lt;/param&gt;public static void DeleteUpFile(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return;    }    string thumbnailpath = _filepath.Substring(0, _filepath.LastIndexOf("/")) + "mall_" + _filepath.Substring(_filepath.LastIndexOf("/") + 1);    string fullTPATH = GetMapPath(_filepath); //&#23487;&#30053;&#22270;    string fullpath = GetMapPath(_filepath); //&#21407;&#22270;    if (File.Exists(fullpath))    {        File.Delete(fullpath);    }    if (File.Exists(fullTPATH))    {        File.Delete(fullTPATH);    }}返回文件大小KB/// &lt;summary&gt;/// &#36820;&#22238;&#25991;&#20214;&#22823;&#23567;KB/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#30456;&#23545;&#36335;&#24452;&lt;/param&gt;/// &lt;returns&gt;int&lt;/returns&gt;public static int GetFileSize(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return 0;    }    string fullpath = GetMapPath(_filepath);    if (File.Exists(fullpath))    {        FileInfo fileInfo = new FileInfo(fullpath);        return ((int)fileInfo.Length) / 1024;    }    return 0;}返回文件扩展名，不含“.”/// &lt;summary&gt;/// &#36820;&#22238;&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#19981;&#21547;&#8220;.&#8221;/// &lt;/summary&gt;/// &lt;param name="_filepath"&gt;&#25991;&#20214;&#20840;&#21517;&#31216;&lt;/param&gt;/// &lt;returns&gt;string&lt;/returns&gt;public static string GetFileExt(string _filepath){    if (string.IsNullOrEmpty(_filepath))    {        return "";    }    if (_filepath.LastIndexOf(".") &gt; 0)    {        return _filepath.Substring(_filepath.LastIndexOf(".") + 1); //&#25991;&#20214;&#25193;&#23637;&#21517;&#65292;&#19981;&#21547;&#8220;.&#8221;    }    return "";}文件下载TransmitFile方式/* &#24494;&#36719;&#20026;Response&#23545;&#35937;&#25552;&#20379;&#20102;&#19968;&#20010;&#26032;&#30340;&#26041;&#27861;TransmitFile&#26469;&#35299;&#20915;&#20351;&#29992;Response.BinaryWrite&#19979;&#36733;&#36229;&#36807;400MB&#30340;&#25991;&#20214;&#26102;&#65292;&#23548;&#33268;Aspnet_wp.exe&#36827;&#31243;&#22238;&#25910;&#32780;&#26080;&#27861;&#25104;&#21151;&#19979;&#36733;&#30340;&#38382;&#39064;&#12290; &#20195;&#30721;&#22914;&#19979;&#65306;*/Response.ContentType = "application/x-zip-compressed";  string FileName = "test.doc";  //&#20351;&#29992;UTF-8&#23545;&#25991;&#20214;&#21517;&#36827;&#34892;&#32534;&#30721;  Response.AppendHeader("Content-Disposition", "attachment;filename=\"" + HttpUtility.UrlEncode(FileName, System.Text.Encoding.UTF8) + "\"");  Response.ContentType = "application/octet-stream";  Response.AddHeader("Content-Disposition", "attachment;filename=" + FileName);  string filename = Server.MapPath("../ReportTemplate/test.doc");  Response.TransmitFile(filename);  WriteFile方式/* using System.IO;          */string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;  FileInfo fileInfo = new FileInfo(filePath);  Response.Clear();  Response.ClearContent();  Response.ClearHeaders();  Response.AddHeader("Content-Disposition", "attachment;filename=\"" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8) + "\"");  Response.AddHeader("Content-Length", fileInfo.Length.ToString());  Response.AddHeader("Content-Transfer-Encoding", "binary");  Response.ContentType = "application/octet-stream";  Response.WriteFile(fileInfo.FullName);  Response.Flush();  Response.End();  WriteFile分块下载方式string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;System.IO.FileInfo fileInfo = new System.IO.FileInfo(filePath);if (fileInfo.Exists == true)  {      const long ChunkSize = 102400; //100K &#27599;&#27425;&#35835;&#21462;&#25991;&#20214;&#65292;&#21482;&#35835;&#21462;100K&#65292;&#36825;&#26679;&#21487;&#20197;&#32531;&#35299;&#26381;&#21153;&#22120;&#30340;&#21387;&#21147;      byte[] buffer = new byte[ChunkSize];      Response.Clear();      System.IO.FileStream iStream = System.IO.File.OpenRead(filePath);      long dataLengthToRead = iStream.Length; //&#33719;&#21462;&#19979;&#36733;&#30340;&#25991;&#20214;&#24635;&#22823;&#23567;      Response.ContentType = "application/octet-stream";      Response.AddHeader("Content-Disposition",      "attachment; filename=" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8));      while (dataLengthToRead &gt; 0 &amp;&amp; Response.IsClientConnected)      {          int lengthRead = iStream.Read(buffer, 0, Convert.ToInt32(ChunkSize)); //&#35835;&#21462;&#30340;&#22823;&#23567;          Response.OutputStream.Write(buffer, 0, lengthRead);          Response.Flush();          dataLengthToRead = dataLengthToRead - lengthRead;      }      Response.Close();  }  流方式下载string fileName = "test.doc";//&#23458;&#25143;&#31471;&#20445;&#23384;&#30340;&#25991;&#20214;&#21517;  string filePath = Server.MapPath("../ReportTemplate/test.doc");//&#36335;&#24452;//&#20197;&#23383;&#31526;&#27969;&#30340;&#24418;&#24335;&#19979;&#36733;&#25991;&#20214; FileStream fs = new FileStream(filePath, FileMode.Open);  byte[] bytes = new byte[(int)fs.Length];  fs.Read(bytes, 0, bytes.Length);  fs.Close();  Response.ContentType = "application/octet-stream";  //&#36890;&#30693;&#27983;&#35272;&#22120;&#19979;&#36733;&#25991;&#20214;&#32780;&#19981;&#26159;&#25171;&#24320;  Response.AddHeader("Content-Disposition", "attachment;  filename=" + HttpUtility.UrlEncode(fileName, System.Text.Encoding.UTF8));  Response.BinaryWrite(bytes);  Response.Flush();  Response.End();参考资料http://www.cnblogs.com/CookBlack/archive/2011/04/10/1883864.htmlhttp://www.cnblogs.com/technology/archive/2011/07/12/2104786.html]]></content>
      <categories>
        
          <category> C# </category>
        
      </categories>
      <tags>
        
          <tag> file </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[算法之家]]></title>
      <url>/algorithms/2014/05/25/algorithms-family/</url>
      <content type="text"><![CDATA[zrg1390556487@gmail.com初级LV.1Hello World#include&lt;stdio.h&gt;void main(){    printf("Hello World!");}a+b#include&lt;stdio.h&gt;void main(){    int a,b;    printf("Please enter two integers separated by commas!\n");    printf("a=");    scanf("%d",&amp;a);    printf("b=");    scanf("%d",&amp;b);    printf("a+b=%d\n",a+b);}大小写转换#include&lt;stdio.h&gt;#include&lt;string.h&gt;/** * Conversion * a-z &lt;--&gt; A-Z *///initchar convert(char ch);//mainvoid main(){    int i,j;    int n,length;    char arr[300];    printf("Please enter n value.\n");    scanf("%d",&amp;n);    for(i=0;i&lt;n;i++){        gets(arr);        length=strlen(arr);        for(j=0;j&lt;=n;j++){            arr[j]=convert(arr[j]);        }        for(j=0;j&lt;length;j++){            putchar(arr[j]);        }    }}//convertchar convert(char ch){    if(ch&gt;='a'&amp;&amp;ch&lt;='z'){        return ch-32;    }else if(ch&gt;='A'&amp;&amp;ch&lt;='Z'){        return ch+32;    }else{        return ch;    }}水仙花数#include&lt;stdio.h&gt;/** * &#27700;&#20185;&#33457;&#25968;(Narcissus number) * &#25551;&#36848;&#65306;&#22914;&#26524;&#19968;&#20010;&#19977;&#20301;&#25968;&#30340;&#27599;&#20010;&#25968;&#20301;&#30340;&#19977;&#27425;&#26041;&#21644;&#23601;&#26159;&#26412;&#36523;&#12290; * */int isYes(int n);void main(){    int l,m,n,flag;    printf("Please enter 3-digit interger,Separated by commas!\n");    while(scanf("%d,%d",&amp;m,&amp;n)!=EOF){        flag=0;        for(l=m;l&lt;=n;l++){            if(isYes(l)){                flag=1;                printf("%d ",l);            }        }        if(flag==0){            printf("No!");        }    }}int isYes(int n){    int i,j,k;    i=n/100;//&#30334;&#20301;    j=n/10%10;//&#21313;&#20301;    k=n%10;//&#20010;&#20301;    if(n==i*i*i+j*j*j+k*k*k){        return 1;    }else{        return 0;    }}青蛙王子#include&lt;stdio.h&gt;/** * &#19968;&#20010;&#29579;&#23376;&#34987;&#24043;&#24072;&#35781;&#21650;&#65292;&#8230;&#8230; * */void main(){    unsigned int a,b,c,temp,min;    while(scanf("%u %u %u",&amp;a,&amp;b,&amp;c),a!=0||b!=0||c!=0){        if(a==0&amp;&amp;b==0){            printf("No\n");            continue;        }        if(b&gt;a){            temp=a;            a=b;            b=temp;        }        if(b==0){            min=a;        }        if(a==b){            min=a;          }        while(a&gt;b&amp;&amp;b!=0){            temp=a-b;            if(temp&gt;b){                a=temp;            }else if(temp&lt;b){                a=b;                b=temp;             }else{                min=temp;                break;            }        }        if((c%min)==0){            printf("Yes\n");        }else{            printf("No\n");        }    }}海明距离#include&lt;stdio.h&gt;/** * &#28023;&#26126;&#36317;&#31163;(Haiming Distance) * &#20108;&#36827;&#21046;&#24773;&#20917;&#19979;&#65292;&#19968;&#20010;&#25972;&#25968;&#21464;&#25104;&#21478;&#19968;&#20010;&#25972;&#25968;&#38656;&#35201;&#32763;&#36716;&#30340;&#20301;&#25968;&#12290; * */void main(){    int x,y,m,n;    int dist=0;    printf("Please enter 2-digit integer,Separated by commas!\n");    scanf("%d,%d",&amp;x,&amp;y);    while(x!=0||y!=0){        m=x%2;x=x/2;        n=y%2;y=y/2;        if(m!=n){            dist++;        }    }    printf("x and y [Haiming Distance]:%d",dist);}哈密尔顿距离#include&lt;stdio.h&gt;/** * &#21704;&#23494;&#23572;&#39039;&#36317;&#31163; * Hamilton.c * &#26377;&#20004;&#20010;&#28857;P[x1,y1],Q[x2,y2]&#65292;&#23450;&#20041;&#20854;&#21704;&#23494;&#23572;&#39039;&#36317;&#31163;D=|x1-x2|+|y1-y2| * */void main(){    int x1,y1,x2,y2,temp_x,temp_y;    printf("Please enter 4 numbers,each 2 numbers are Separated by commas.Format:'3,4 5,6'\n");    scanf("%d,%d %d,%d",&amp;x1,&amp;y1,&amp;x2,&amp;y2);    if(x1&gt;x2){        temp_x=x1-x2;    }else{        temp_x=x2-x1;    }    if(y1&gt;y2){        temp_y=y1-y2;    }else{        temp_y=y2-y1;    }    printf("result:%d\n",temp_x+temp_y);}数码平方和#include&lt;stdio.h&gt;/** * &#25968;&#30721;&#24179;&#26041;&#21644; * &#19968;&#20010;&#25972;&#25968;&#21508;&#20010;&#25968;&#30721;&#30340;&#24179;&#26041;&#21644;&#30340;&#20010;&#20301;&#25968;&#25104;&#20026;&#20998;&#31867;&#20540;&#12290;&#32473;&#20320;&#19968;&#20010;&#21306;&#38388;[a,b]&#65292;&#19968;&#20010;&#25968;&#30721;n&#65292;&#27714;&#36825;&#20010;&#21306;&#38388;[a,b]&#20869;&#30340;&#20998;&#31867;&#20540;n&#12290; * */void main(){    int a,b,c,d,e;    printf("Please enter 3 numbers.\n");    scanf("%d,%d,%d",&amp;a,&amp;b,&amp;e);    int i,j,k,n,f,g;        for(i=0;i&lt;=b;i++){        g=i;c=i;        f=0;d=c;        for(;d!=0;){            c=d%10;            f=f+c*c;            d=d/10;        }        f=f%10;        if(f==e){            k++;        }    }    printf("result:%d\n",k);}统计字符#include&lt;stdio.h&gt;#include&lt;string.h&gt;/** * Statistics Strings * &#36755;&#20837;&#19968;&#23383;&#31526;&#20018;&#65292;&#35831;&#25214;&#20986;&#20986;&#29616;&#27425;&#25968;&#26368;&#22810;&#30340;&#22823;&#20889;&#23383;&#27597;&#12290; * &#37319;&#29992;&#21704;&#24076;&#26144;&#23556;&#24605;&#24819;&#65292;&#25226;A-Z&#26144;&#23556;&#21040;&#21704;&#24076;&#34920;&#20013;&#20445;&#23384;&#20854;&#20986;&#29616;&#30340;&#27425;&#25968;&#65292;&#26368;&#21518;&#36755;&#20986;&#32467;&#26524;&#12290; * */void main(){    char str[100],z[1000];    int i,j,k,sum[30],a;    gets(z);//&#35835;&#21462;&#23383;&#31526;&#20018;    memset(sum,0,sizeof(str));    for(i=0;i&lt;strlen(z);i++){        sum[z[i]-'A']++;    }    k=0;    for(i=0;i&lt;30;i++){        if(k&lt;sum[i]){            k=sum[i];            a=i+'A';        }    }    printf("%c %d\n",a,k);  }数字塔/** * Digital Tower *    1 *   222 *  33333 * */#include&lt;stdio.h&gt;void main(){    int n;    printf("Please enter any number!\n");    scanf("%d",&amp;n);    int i,j;}有多少个1#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;void hanoi(int n,char x,char y,char z);int main(void){    hanoi(6,'A','B','C');    return EXIT_SUCCESS;    }void hanoi(int n,char x,char y,char z){    if(n==0){    }else{        hanoi(n-1,x,z,y);        printf("%c-&gt;%c,",x,y);        hanoi(n-1,z,y,x);    }}字符串逆序回文字串凯撒的密码最小公倍数素数判定素数个数分数加减法合法的整数质因数分解歌德巴赫猜想替换空格队列的实现栈的实现循环队列合并两个有序链表逆转一个链表从尾到头打印链表链表中倒数第k个结点O(1)时间内删除链表结点中级LV.2选择排序插入排序(InsertSort)介绍(Instoduction)伪代码(pseudo code)for j=2 to A.length    key=A[j];    //Insert A[j] into the sorted sequence A[1..j-1]    i=j-1    while i&gt;0 and A[i]&gt;key         A[i+1]=A[i]         i=i-1    A[i+1]=key实现(realization)分而治之(divideand-conquer)冒泡排序(BubbleSort)介绍(Introduction)Bubblesort is a popular,but inefficient,sorting algorithm. It works by repeatedly swapping adjacent elements that are out of order.(非译文)冒泡排序是一种较简单的排序算法。它会遍历若干次要排序的数列，每次遍历时，它都会从前往后依次的比较相邻两个数的大小；如果前者比后者大，则交换它们的位置。这样，一次遍历之后，最大的元素就在数列的末尾！ 采用相同的方法再次遍历时，第二大的元素就被排列在最大元素之前。重复此操作，直到整个数列都有序为止！伪代码(pseudo code)1 for i = 1 to A.length - 12     for j = A:length downto i + 13         if A[j] &lt; A[j-1]   4             exchange A[j] with A[j - 1]实现(realization)C#//Core code.for (int i = 0; i &lt; arrInt.Length - 1; i++){    for (int j = 1; j &lt; arrInt.Length - i; j++)    {        if (arrInt[j] &lt; arrInt[j - 1])        {            //&#20132;&#25442;&#20540;            int temp = arrInt[j];            arrInt[j] = arrInt[j - 1];            arrInt[j - 1] = temp;        }    }    // from end to begin    /*for (int j = arrInt.Length - 1; j &gt; i; j--)    {        if (arrInt[j] &lt; arrInt[j - 1])        {            int tmp = arrInt[j];            arrInt[j] = arrInt[j - 1];            arrInt[j - 1] = tmp;        }    }*/}C//Core code.    int i,j;    int flag;                 // &#26631;&#35760;    for (i=n-1; i&gt;0; i--)    {        flag = 0;            // &#21021;&#22987;&#21270;&#26631;&#35760;&#20026;0        // &#23558;a[0...i]&#20013;&#26368;&#22823;&#30340;&#25968;&#25454;&#25918;&#22312;&#26411;&#23614;        for (j=0; j&lt;i; j++)        {            if (a[j] &gt; a[j+1])            {                swap(a[j], a[j+1]);                flag = 1;    // &#33509;&#21457;&#29983;&#20132;&#25442;&#65292;&#21017;&#35774;&#26631;&#35760;&#20026;1            }        }        if (flag==0)            break;            // &#33509;&#27809;&#21457;&#29983;&#20132;&#25442;&#65292;&#21017;&#35828;&#26126;&#25968;&#21015;&#24050;&#26377;&#24207;&#12290;    } Javapublic static void BubbleSort(int[] arr,int num) {    for (int i = 0; i &lt; arr.length; i++) {        for (int j = num-1; j &gt;i; j--) {            if (arr[i]&gt;arr[j]) {                int temp=arr[i];                arr[i]=arr[j];                arr[j]=temp;            }        }    }    for(int k=0;k&lt;num;k++){        System.out.print(arr[k]+" ");    }}快速排序(QuickSort)介绍(Introduction)快速排序(Quick Sort)使用分治法策略。基本思想是：选择一个基准数，通过一趟排序将要排序的数据分割成独立的两部分；其中一部分的所有数据都比另外一部分的所有数据都要小。然后，再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。Java希尔排序归并排序基数排序堆排序递归之杨辉三角递归之斐波那契数列递归之汉诺塔分治之二分搜索旋转数组的最小数字分治之棋盘覆盖回溯之全排列回溯之N皇后问题NFS深度优先搜索BFS广度优先搜索BFS+记录路径回溯之旅行售货员回族之0+1背包问题二叉树遍历高级LV.3动态规划之拦截导弹动态规划之完全背包动态规划之01背包动态规划之统计单词个数最长公共字符子序列最小生成树Prim算法最小生成树Kruskal算法网络流之最大流（EK）二分图最大匹配算法最小费用流之飞镖网络流之方格取数强联通分量-Kosaraju算法博弈论之取石子游戏图论之拓扑排序]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> Algorithms </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[C# Notes]]></title>
      <url>/c%23/2014/05/10/c-sharp-notes/</url>
      <content type="text"><![CDATA[字符串操作String.Substring()//格式String.Substring(int beginIndex)String.Substring(int beginIndex,int endIndex)//示例string str_new=str.Substring(6,2)：表示从str中截取位置为6的字符开始长度为2的字符串，6表示子字符的起始位置，2表示子字符的字符长度。其他方法//格式int indexOf(String str) 返回第一次出现的指定子字符串在此字符串中的索引。int indexOf(String str, int fromIndex) 从指定的索引处开始，返回第一次出现的指定子字符串在此字符串中的索引。int lastIndexOf(String str) 返回在此字符串中最右边出现的指定子字符串的索引。int lastIndexOf(String str, int fromIndex) 从指定的索引处开始向后搜索，返回在此字符串中最后一次出现的指定子字符串的索引。 int length() 返回此字符串的长度。boolean startsWith(String prefix) 测试此字符串是否以指定的前缀开始。 boolean startsWith(String prefix, int toffset) 测试此字符串是否以指定前缀开始，该前缀以指定索引开始。//示例str.Substring(0,str.LastIndexOf(","));参考资料http://www.blogjava.net/AndyZhang/archive/2012/04/25/376614.htmlhttp://www.cnblogs.com/rocblog/archive/2013/05/07/3064593.htmlhttp://www.cnblogs.com/Deckard/archive/2009/06/03/1495452.html日期时间处理C#正则表达式判断输入日期格式是否正确/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26085;&#26399;&#22411;&#23383;&#31526;&#20018;/// &lt;/summary&gt;/// &lt;param name="StrSource"&gt;&#26085;&#26399;&#23383;&#31526;&#20018;(2008-05-08)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsDate(string StrSource){     return Regex.IsMatch(StrSource, @"^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-9]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$");}/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26102;&#38388;&#22411;&#23383;&#31526;&#20018;// &lt;/summary&gt;/// &lt;param name="source"&gt;&#26102;&#38388;&#23383;&#31526;&#20018;(15:00:00)&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsTime(string StrSource){     return Regex.IsMatch(StrSource, @"^((20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d)$");}/// &lt;summary&gt;/// &#26159;&#21542;&#20026;&#26085;&#26399;+&#26102;&#38388;&#22411;&#23383;&#31526;&#20018;/// &lt;/summary&gt;/// &lt;param name="source"&gt;&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static bool IsDateTime(string StrSource){    return Regex.IsMatch(StrSource, @"^(((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-)) (20|21|22|23|[0-1]?\d):[0-5]?\d:[0-5]?\d)$ ");}C#利用线程、委托，实时显示时间#region &#36816;&#34892;&#26102;&#26174;&#31034;&#23454;&#26102;&#26102;&#38388;new Thread(() =&gt;{        while (true)        {       try           {           labelTime.BeginInvoke(new MethodInvoker(() =&gt; labelTime.Text = DateTime.Now.ToString()));       }       catch (Exception)       {           }       Thread.Sleep(1000);     }    })  { IsBackground = true }.Start();#endregionC#中无法引用自己创建的类库中的类问题描述新建一个类，定义了一些方法，在外部引用该类时，不能引用。解决办法1.检查类前面有没有添加加或使用public。2.类中定义的方法也应该是public类型的3.改完之后将该类库重新生成一次4.注意类名不要与系统保留字冲突参考资料https://www.ezloo.com/2008/10/classlibrary_visited.html获取指定范围的n个随机数#region &#38543;&#26426;&#25968;&#33719;&#21462;        /**         * &#33719;&#21462;&#35268;&#23450;&#33539;&#22260;&#20869;&#30340;n&#20010;&#38543;&#26426;&#25968;         *          * min_value    int    &#38543;&#26426;&#25968;&#19979;&#38480;         * max_value    int    &#38543;&#26426;&#25968;&#19978;&#38480;         * number       int    &#38543;&#26426;&#25968;&#37327;         */        private string getRandom(int min_value, int max_value, int number)        {            Random random = new Random();            ArrayList arr = new ArrayList();            int temp = 0;            for (int i = 0; i &lt; number; i++)            {                temp = random.Next(min_value, max_value); //&#38543;&#26426;&#21462;&#25968;                arr.Add(temp);            }            string str = "";            for (int j = 0; j &lt; arr.Count; j++)            {                str += arr[j].ToString() + ",";                //Console.Write(arr[j].ToString());            }            return str.Substring(0, str.LastIndexOf(","));        }#endregion]]></content>
      <categories>
        
          <category> C# </category>
        
      </categories>
      <tags>
        
          <tag> C# </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Project Euler]]></title>
      <url>/algorithms/2014/03/12/project-euler/</url>
      <content type="text"><![CDATA[1~100Multiples of 3 and 5/*Multiples of 3 and 5If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.Find the sum of all the multiples of 3 or 5 below 1000.3&#30340;&#20493;&#25968;&#21644;5&#30340;&#20493;&#25968;&#22914;&#26524;&#25105;&#20204;&#21015;&#20986;10&#20197;&#20869;&#25152;&#26377;3&#25110;5&#30340;&#20493;&#25968;&#65292;&#25105;&#20204;&#23558;&#24471;&#21040;3&#12289;5&#12289;6&#21644;9&#65292;&#36825;&#20123;&#25968;&#30340;&#21644;&#26159;23&#12290;&#27714;1000&#20197;&#20869;&#25152;&#26377;3&#25110;5&#30340;&#20493;&#25968;&#30340;&#21644;&#12290;*/#include&lt;stdio.h&gt;int main(){    int sum=0;    for(int i=0;i&lt;1000;i++){        if(i%3 == 0 || i%5 == 0){            sum+=i;         }    }    printf("1000&#20197;&#20869;&#25152;&#26377;3&#25110;5&#30340;&#20493;&#25968;&#30340;&#21644;&#65306;%d\n",sum);    return 0;}Even Fibonacci numbers/* * Even Fibonacci numbers * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: * * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &#8230; * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. * * &#20598;&#26000;&#27874;&#37027;&#22865;&#25968; * &#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#20013;&#30340;&#27599;&#19968;&#39033;&#37117;&#26159;&#21069;&#20004;&#39033;&#30340;&#21644;&#12290;&#30001;1&#21644;2&#24320;&#22987;&#29983;&#25104;&#30340;&#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#21069;10&#39033;&#20026;&#65306; * * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &#8230; * &#32771;&#34385;&#35813;&#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#20013;&#19981;&#36229;&#36807;&#22235;&#30334;&#19975;&#30340;&#39033;&#65292;&#27714;&#20854;&#20013;&#20026;&#20598;&#25968;&#30340;&#39033;&#20043;&#21644;&#12290; * */#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int fun_recursive(int n);int main(){        int n;        printf("&#35831;&#36755;&#20837;&#35201;&#36755;&#20986;&#39033;&#65288;&#33258;&#28982;&#25968;&#65289;&#26000;&#27874;&#37027;&#22865;&#25968;&#21015;&#65306;");        scanf("%d",&amp;n);        int *a = (int *)malloc((n+1)*sizeof(int));//&#22914;&#38656;&#23384;&#20648;&#65292;&#20351;&#29992;&#21160;&#24577;&#20869;&#23384;&#20998;&#37197;n+1&#20010;&#31354;&#38388;&#36827;&#34892;&#23384;&#20648;        int i,sum=0;        for(i=1;i&lt;n+1;i++){                int number=fun_recursive(i);                printf("%d,",number);                if(i!=0 &amp;&amp; i%5==0){                        printf("\n");                }                if(number%2 == 0){                        //&#27714;&#20598;&#25968;&#39033;&#20043;&#21644;                        sum+=number;                }        }        printf("&#20598;&#25968;&#39033;&#20043;&#21644;&#65306;%d\n",sum);        return 0;}int fun_recursive(int n){        if(n&lt;=1){                return n;        }else{                return fun_recursive(n-1)+fun_recursive(n-2);        }}Largest prime factor/* Largest prime factor * The prime factors of 13195 are 5, 7, 13 and 29. * * What is the largest prime factor of the number 600851475143 ? * * &#26368;&#22823;&#36136;&#22240;&#25968; * 13195&#30340;&#25152;&#26377;&#36136;&#22240;&#25968;&#20026;5&#12289;7&#12289;13&#21644;29&#12290; * * 600851475143&#26368;&#22823;&#30340;&#36136;&#22240;&#25968;&#26159;&#22810;&#23569;&#65311; * */#include&lt;stdio.h&gt;int main(){    long int n,i;    printf("&#35831;&#36755;&#20837;&#20219;&#24847;&#27491;&#25972;&#25968;&#65306;");    scanf("%ld",&amp;n);    for(i=2;i&lt;n;i++){        while(n!=i){            if(n%i == 0){                printf("%ld*",i);                n/=i;            }else{                break;            }        }    }    printf("%ld\n",n);    return 0;}Largest palindrome product/* Largest palindrome product * A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 &#215; 99. * * Find the largest palindrome made from the product of two 3-digit numbers. * * &#26368;&#22823;&#22238;&#25991;&#20056;&#31215; * &#22238;&#25991;&#25968;&#23601;&#26159;&#20174;&#21069;&#24448;&#21518;&#21644;&#20174;&#21518;&#24448;&#21069;&#35835;&#37117;&#19968;&#26679;&#30340;&#25968;&#12290;&#30001;&#20004;&#20010;2&#20301;&#25968;&#30456;&#20056;&#24471;&#21040;&#30340;&#26368;&#22823;&#22238;&#25991;&#20056;&#31215;&#26159; 9009 = 91 &#215; 99&#12290; * * &#25214;&#20986;&#30001;&#20004;&#20010;3&#20301;&#25968;&#30456;&#20056;&#24471;&#21040;&#30340;&#26368;&#22823;&#22238;&#25991;&#20056;&#31215;&#12290; * * */#include&lt;stdio.h&gt;char *reverseStr(char *str,size_t len)int main(){        int max = 0;        for(int i=100;i&lt;=999;i++){                for(int j=100;j&lt;=999;j++){                        int palindrome = i*j;                        //&#23383;&#31526;&#20018;&#21453;&#36716;                        *reverseStr()                }        }}char *reverseStr(char *str, size_t len){        char *start = str;        char *end = str+len-1;        char ch;        if(str != NULL){                while(start&lt;end){                        ch = *start;                        *start++=*end;                        *end-- =ch;                }        }        return str;}# coding:utf-8# Largest palindrome product# A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.## Find the largest palindrome made from the product of two 3-digit numbers.## 最大回文乘积# 回文数就是从前往后和从后往前读都一样的数。由两个2位数相乘得到的最大回文乘积是 9009 = 91 × 99。## 找出由两个3位数相乘得到的最大回文乘积。# ## 定义字符反转方法def reverse(num):    strnum = str(num)[::-1]    return int(strnum)max = Nonefor a in range(100,1000):    for b in range(100,1000):        rs=a*b        if(rs == reverse(rs) and rs &gt; max):            max=rs;print '由两个3位数相乘得到的最大回文乘积是：',maxSmallest multiple/* Smallest multiple * 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder. * * What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20? * * &#26368;&#23567;&#20493;&#25968; * 2520&#26159;&#26368;&#23567;&#30340;&#33021;&#22815;&#34987;1&#21040;10&#25972;&#38500;&#30340;&#25968;&#12290; * * &#26368;&#23567;&#30340;&#33021;&#22815;&#34987;1&#21040;20&#25972;&#38500;&#30340;&#27491;&#25968;&#26159;&#22810;&#23569;&#65311; * */#include&lt;stdio.h&gt;101~200201~300301~400401~500501~600601~now]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> 欧拉计划 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Most Used Software On Linux]]></title>
      <url>/software/2013/11/02/Most-Used-Software-On-Linux/</url>
      <content type="text"><![CDATA[VIM&amp;Emacs两个神器软件单独介绍，这里不重复叙写。MPlayerInstall// official：http://www.mplayerhq.hu/design7/news.html$ tar -Jxf MPlayer-1.1.1.tar.xz$ cd MPlayer-1.1.1$ sudo ./configure// 发现，需要安装一个依赖包:yasm$ wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz// 安装完成后，重新配置、编译和安装$ sudo ./configure$ sudo make &amp;&amp; make installchrome &amp; chromiumgoogle-chrome//添加安装源$ sudo vim /etc/apt/sources.listdeb http://dl.google.com/linux/chrome/deb/ stable main//OR$ wget https://dl-ssl.google.com/linux/linux_signing_key.pub$ apt-key add linux_signing_key.pubchromium$ sudo apt-get update$ sudo apt-get install chromium chromium-l10n（chromium-l10n 是用于本地化界面的，是可选的软件包）注意：chromium不支持PDF查看Scrot（截图工具）安装$ sudo apt-get install scrot使用方法1.整个桌面截图(Full desktop)$ scrot$ scrot ~/Downloads/my_desktop.png //Saving to specified directory.2.特定区域截图（选择截取）(Specific area)$ scrot -s3.延迟截图(temporize screenshot)$ scrot -s -d 54.截图调整质量(Adjust the quality of screenshots)$ scrot -q 505.截图调整大小(Adjust the screen size)$ scrot -t 106.将截图发送给其他命令(Deliver the intercepted screenshots to other commands)$ scrot -e 'mv $f ~/screenshots'参考资料(References)https://linux.cn/article-3197-1.htmlrarcrack（压缩包密码破解工具）支持格式：rar,7z,zip// install$ sudo apt-get install libxml2-dev build-essential$ sudo apt-get install rarcrack// use$ rarcrack --threads 10 --type rar test.rar宝塔面板一款使用方便、功能强大且终身免费的服务器管理软件。详见官网:http://www.bt.cn/Cisco AnyConnect VPN Client下载及安装问题解决$ sudo systemctl enable vpnagentd_initvpnagentd_init.service is not a native service, redirecting to systemd-sysv-install.Executing: /lib/systemd/systemd-sysv-install enable vpnagentd_initinsserv: warning: script 'vpnagentd_init' missing LSB tags and overridesinsserv: There is a loop between service bt and vpnagentd_init if stoppedinsserv:  loop involving service vpnagentd_init at depth 2insserv:  loop involving service bt at depth 1insserv: Stopping vpnagentd_init depends on bt and therefore on system facility `$all' which can not be true!insserv: exiting now without changing boot order!update-rc.d: error: insserv rejected the script header[solve]：$ sudo vim /etc/init.d/vpnagentd_init#!/bin/sh### BEGIN INIT INFO# Provides: vpnagentd_init# Required-Start: $remote_fs $syslog# Required-Stop: $remote_fs $syslog# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: Start Cisco vpn agent daemon at boot time# Description: Cisco vpn agent daemon### END INIT INFOBind：DNS工具安装及配置安装# yum install -y bind配置1)# vim /etc/named.conf修改内容如下： 将下面 listen-on port 53 { 127.0.0.1; }; allow-query { localhost; }; 改为 listen-on port 53 { any; }; allow-query { any; };2)# vim named.rfc1912.zones注意改动位置：zone "zrg.com.cn" IN {type master;file "named.zrg";allow-update { none; };};3)# cp /var/named/named.localhost /var/named/named.zrg//修改文件所属群组#chgrp named /var/named/named.zrg4)# vim /var/named/named.zrg注意改动位置：$TTL 1D@ IN SOA @ dns.zrg.com.cn. root(0 ; serial1D ; refresh1H ; retry1W ; expire3H ) ; minimumNS dns.zrg.com.cn.DNS A 192.168.120.166A 127.0.0.1AAAA ::15)# /etc/init.d/named restart# chkconfig named on6)# vim /etc/sysconfig/networkNetwork=yesHostname=dns.zrg.com.cn7)# vim /etc/resolv.confSearch zrg.com.cnNameserver 192.168.120.1668)# /etc/init.d/named restart# ping zrg.com.cn# rebootconfigurationChange default dir#local userlocal_root=/usr/share/nginx/html#is_enable local view,default_setting is NOchroot_local_user=NO#anonymous useranon_root=/var/ftp/pubConfiguring directory of accesschroot_local_user=YESchroot_list_enable=NOallow_writeable_chroot=YES&#25253;&#22914;&#19979;&#38169;&#35823;&#65292;&#26159;&#22240;&#20026;&#27809;&#26377;&#28155;&#21152;&#19978;&#38754;&#30340;&#31532;&#19977;&#26465;&#35821;&#21477;&#65292;&#23548;&#33268;&#29992;&#25143;&#26080;&#27861;&#38145;&#23450;&#33258;&#24049;&#30340;&#30446;&#24405;&#12290;   500 OOPS: vsftpd: refusing to run with writable root inside chroot()notice: &#37197;&#32622;&#20855;&#20307;&#24773;&#20917;&#26377;&#20197;&#19979;&#20960;&#31181;&#65306;1&#65289;&#24403; chroot_list_enable=yes&#65292;chroot_local_user=yes&#26102;&#65292;&#22312;/etc/vsftpd/chroot_list&#25991;&#20214; &#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#65307;&#26410;&#22312;&#25991;&#20214;&#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#19981;&#33021;&#20999;&#25442;&#21040;&#31449;&#28857;&#26681;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;&#12290;2&#65289;&#24403; chroot_list_enable=yes&#65292;chroot_local_user=no&#26102;&#65292;&#22312;/etc/vsftpd/chroot_list&#25991;&#20214;&#20013; &#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#19981;&#33021;&#20999;&#25442;&#21040;&#31449;&#28857;&#26681;&#30446;&#24405;&#30340;&#19978;&#32423;&#30446;&#24405;&#65307;&#26410;&#22312;&#25991;&#20214;&#20013;&#21015;&#20986;&#30340;&#29992;&#25143;&#65292;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;3&#65289;&#24403; chroot_list_enable=no&#65292;chroot_local_user=yes&#26102;&#65292;&#25152;&#26377;&#29992;&#25143;&#22343;&#19981;&#33021;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;4&#65289;&#24403; chroot_list_enable=no&#65292;chroot_local_user=no&#26102;&#65292;&#25152;&#26377;&#29992;&#25143;&#22343;&#21487;&#20197;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#12290;5&#65289;&#24403;&#29992;&#25143;&#19981;&#20801;&#35768;&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#26102;&#65292;&#30331;&#24405;&#21518;ftp&#31449;&#28857;&#30340;&#26681;&#30446;&#24405;&#8220;/&#8221;&#26159;&#35813;ftp&#36134;&#25143;&#30340;&#20027;&#30446;&#24405;&#65292;&#21363;&#25991;&#20214;&#30340;&#31995;&#32479;&#30340;/var/ftp&#30446;&#24405;&#12290;Referenceshttps://security.appspot.com/vsftpd.htmlhttps://en.wikipedia.org/wiki/Vsftpdhttp://baike.baidu.com/item/vsftpdComposer安装1.Download composer.phar file.2.Excute:# php composer.phar3.Global:# mv composer.phar /usr/local/bin/composer4.Permission:# chmod 744 composer问题解决error: /usr/bin/env: php: No such file or directory solve:Configuring php to become global variablesvsftpdInstallationenvironmentLinuxDownload and Installhttps://security.appspot.com/vsftpd.html#download//yumyum install -y vsftpdConfigurationChange default dir#local userlocal_root=/usr/share/nginx/html#is_enable local view,default_setting is NOchroot_local_user=NO#anonymous useranon_root=/var/ftp/pubConfiguring directory of accesschroot_local_user=YESchroot_list_enable=NOallow_writeable_chroot=YES报如下错误，是因为没有添加上面的第三条语句，导致用户无法锁定自己的目录。   500 OOPS: vsftpd: refusing to run with writable root inside chroot()notice: 配置具体情况有以下几种：1）当 chroot_list_enable=yes，chroot_local_user=yes时，在/etc/vsftpd/chroot_list文件 中列出的用户，可以切换到上级目录；未在文件中列出的用户，不能切换到站点根目录的上级目录。2）当 chroot_list_enable=yes，chroot_local_user=no时，在/etc/vsftpd/chroot_list文件中 列出的用户，不能切换到站点根目录的上级目录；未在文件中列出的用户，可以切换到上级目录。3）当 chroot_list_enable=no，chroot_local_user=yes时，所有用户均不能切换到上级目录。4）当 chroot_list_enable=no，chroot_local_user=no时，所有用户均可以切换到上级目录。5）当用户不允许切换到上级目录时，登录后ftp站点的根目录“/”是该ftp账户的主目录，即文件的系统的/var/ftp目录。vsftpd.conf//CentOS 7, /etc/vsftpd/vsftpd.conf.# Example config file /etc/vsftpd/vsftpd.conf## The default compiled in settings are fairly paranoid. This sample file# loosens things up a bit, to make the ftp daemon more usable.# Please see vsftpd.conf.5 for all compiled in defaults.## READ THIS: This example file is NOT an exhaustive list of vsftpd options.# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's# capabilities.## Allow anonymous FTP? (Beware - allowed by default if you comment this out).anonymous_enable=NO##local_root=/srv/www/## Uncomment this to allow local users to log in.# When SELinux is enforcing check for SE bool ftp_home_dirlocal_enable=YES## Uncomment this to enable any form of FTP write command.write_enable=YES## Default umask for local users is 077. You may wish to change this to 022,# if your users expect that (022 is used by most other ftpd's)local_umask=022## Uncomment this to allow the anonymous FTP user to upload files. This only# has an effect if the above global write enable is activated. Also, you will# obviously need to create a directory writable by the FTP user.# When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access#anon_upload_enable=YES## Uncomment this if you want the anonymous FTP user to be able to create# new directories.#anon_mkdir_write_enable=YES## Activate directory messages - messages given to remote users when they# go into a certain directory.dirmessage_enable=YES## Activate logging of uploads/downloads.xferlog_enable=YES## Make sure PORT transfer connections originate from port 20 (ftp-data).connect_from_port_20=YES## If you want, you can arrange for uploaded anonymous files to be owned by# a different user. Note! Using "root" for uploaded files is not# recommended!#chown_uploads=YES#chown_username=whoever## You may override where the log file goes if you like. The default is shown# below.#xferlog_file=/var/log/xferlog## If you want, you can have your log file in standard ftpd xferlog format.# Note that the default log file location is /var/log/xferlog in this case.xferlog_std_format=YES## You may change the default value for timing out an idle session.#idle_session_timeout=600## You may change the default value for timing out a data connection.#data_connection_timeout=120## It is recommended that you define on your system a unique user which the# ftp server can use as a totally isolated and unprivileged user.#nopriv_user=ftpsecure## Enable this and the server will recognise asynchronous ABOR requests. Not# recommended for security (the code is non-trivial). Not enabling it,# however, may confuse older FTP clients.#async_abor_enable=YES## By default the server will pretend to allow ASCII mode but in fact ignore# the request. Turn on the below options to have the server actually do ASCII# mangling on files when in ASCII mode.# Beware that on some FTP servers, ASCII support allows a denial of service# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd# predicted this attack and has always been safe, reporting the size of the# raw file.# ASCII mangling is a horrible feature of the protocol.#ascii_upload_enable=YES#ascii_download_enable=YES## You may fully customise the login banner string:#ftpd_banner=Welcome to blah FTP service.## You may specify a file of disallowed anonymous e-mail addresses. Apparently# useful for combatting certain DoS attacks.#deny_email_enable=YES# (default follows)#banned_email_file=/etc/vsftpd/banned_emails## You may specify an explicit list of local users to chroot() to their home# directory. If chroot_local_user is YES, then this list becomes a list of# users to NOT chroot().# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that# the user does not have write access to the top level directory within the# chroot)chroot_local_user=YESchroot_list_enable=YESallow_writeable_chroot=YES# (default follows)chroot_list_file=/etc/vsftpd/chroot_list## You may activate the "-R" option to the builtin ls. This is disabled by# default to avoid remote users being able to cause excessive I/O on large# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume# the presence of the "-R" option, so there is a strong case for enabling it.#ls_recurse_enable=YES## When "listen" directive is enabled, vsftpd runs in standalone mode and# listens on IPv4 sockets. This directive cannot be used in conjunction# with the listen_ipv6 directive.listen=NO## This directive enables listening on IPv6 sockets. By default, listening# on the IPv6 "any" address (::) will accept connections from both IPv6# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6# sockets. If you want that (perhaps because you want to listen on specific# addresses) then you must run two copies of vsftpd with two configuration# files.# Make sure, that one of the listen options is commented !!listen_ipv6=YESpam_service_name=vsftpduserlist_enable=YEStcp_wrappers=YESReferenceshttps://security.appspot.com/vsftpd.htmlhttps://en.wikipedia.org/wiki/Vsftpdhttp://baike.baidu.com/item/vsftpd]]></content>
      <categories>
        
          <category> software </category>
        
      </categories>
      <tags>
        
          <tag> MPlayer </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[ACM]]></title>
      <url>/algorithms/2013/10/01/ACM/</url>
      <content type="text"><![CDATA[1～100A+B problem描述	此题为练手用题，请大家计算一下a+b的值.输入	输入两个数，a,b输出	输出a+b的值#include&lt;stdio.h&gt;int main(){    int a,b;    printf("&#35831;&#36755;&#20837;&#20004;&#20010;&#25972;&#25968;(&#29992;&#36887;&#21495;&#20998;&#38548;)&#65306;");    scanf("%d,%d",&amp;a,&amp;b);    printf("%d\n",a+b);}#include&lt;iostream&gt;using namespace std;int main(){    int a,b;    cin&gt;&gt;a&gt;&gt;b;    cout&lt;&lt;a+b&lt;&lt;endl;}括号配对问题描述	现在，有一行括号序列，请你检查这行括号是否配对。输入	第一行输入一个数N（0&lt;N&lt;=100）,表示有N组测试数据。后面的N行输入多组输入数据，每组输入数据都是一个字符串S(S的长度小于10000，且S不是空串），测试数据组数少于5组。数据保证S中只含有"[", "]", "(", ")" 四种字符输出	每组输入数据的输出占一行，如果该字符串中所含的括号是配对的，则输出Yes,如果不配对则输出No多边形重心问题描述	在某个多边形上，取n个点，这n个点顺序给出，按照给出顺序将相邻的点用直线连接， （第一个和最后一个连接），所有线段不和其他线段相交，但是可以重合，可得到一个多边形或一条线段或一个多边形和一个线段的连接后的图形； 	如果是一条线段,我们定义面积为0，重心坐标为（0,0）.现在求给出的点集组成的图形的面积和重心横纵坐标的和；输入	第一行有一个整数0&lt;n&lt;11,表示有n组数据；	每组数据第一行有一个整数m&lt;10000,表示有这个多边形有m个顶点；输出	输出每个多边形的面积、重心横纵坐标的和，小数点后保留三位；ASCII码排序描述	输入三个字符（可以重复）后，按各字符的ASCII码从小到大的顺序输出这三个字符。输入	第一行输入一个数N,表示有N组测试数据。后面的N行输入多组数据，每组输入数据都是占一行，有三个字符组成，之间无空格。输出	对于每组输入数据，输出一行，字符中间用一个空格分开。101~200201~300301~400题目来源南京理工大学 ACM ：http://acm.nyist.edu.cn]]></content>
      <categories>
        
          <category> algorithms </category>
        
      </categories>
      <tags>
        
          <tag> ACM </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
